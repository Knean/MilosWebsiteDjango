{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/authentication.service.ts","./src/app/data-reception.service.ts","./src/app/homepage/homepage.component.ts","./src/app/homepage/homepage.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/purchase.service.ts","./src/app/purchase/purchase.component.ts","./src/app/purchase/purchase.component.html","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/tree-directive.directive.ts","./src/app/tree-generator.service.ts","./src/app/tree/tree.component.ts","./src/app/tree/tree.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'milosSite';\n\n\n\n\n}\n","<app-homepage></app-homepage>\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomepageComponent } from './homepage/homepage.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { TreeComponent } from './tree/tree.component';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport { LoginComponent } from './login/login.component';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RegisterComponent } from './register/register.component';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport { TreeDirectiveDirective } from './tree-directive.directive';\nimport { PurchaseComponent } from './purchase/purchase.component';\nimport {MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport {MatCardModule} from '@angular/material/card';\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomepageComponent,\n    TreeComponent,\n    LoginComponent,\n    RegisterComponent,\n    TreeDirectiveDirective,\n    PurchaseComponent,\n  ],\n\n  imports: [\n    MatTabsModule,\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatMenuModule,\n    MatIconModule,\n    MatDialogModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MatToolbarModule,\n    MatProgressSpinnerModule,\n    MatSidenavModule,\n    FontAwesomeModule,\n    MatCardModule\n  ],\n\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, throwError, BehaviorSubject, Subscription } from 'rxjs';\nimport { catchError, retry } from 'rxjs/operators';\n\n\nimport { User } from './user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\nmario:User\n\n\n  constructor(private http: HttpClient) { }\n\n  public user = new BehaviorSubject<User>(null)\n  public userList = new BehaviorSubject<User[]>([])\n\n  login(username, password) {\n    console.log(username, password , \" this form is not empty\")\n    let csrf = this.getCookie('csrftoken')\n    let csrfheader = new HttpHeaders({ 'X-CSRFToken': csrf })\n    console.log(this.getHost() + \"auth/login/\")\n    this.http.post(this.getHost() + \"auth/login/\", { \"username\": username, \"password\": password }).//, { headers: csrfheader }\n      subscribe(() => this.get_user())\n  }\n  logout() {\n\n    this.http.get(this.getHost() + \"auth/logout/\")\n      .subscribe(() => {\n        this.get_user();// this.refreshCart()\n\n      })\n  }\n\n\n  register(username, password) {\n\n    this.http.post(this.getHost() + \"auth/register/\", { \"username\": username, \"password\": password })\n\n      .subscribe(() => {\n        this.login(username, password);\n        this.get_user()\n      })\n  }\n\n  get_user() {\n    console.log(\"this is the address\" + this.getHost())\n\n    this.http.get(this.getHost() + \"auth/user/\").subscribe((data: any) => {\n      console.log(data, \"this is the data\")\n      if (data.username) {\n        this.user.next(data)\n        console.log(data.username)\n      }\n      else {\n        this.user.next(null)\n        console.log(\"we got null for the user back \")\n      }\n    })\n  }\n\n  get_users(): void {\n    let users: User[]\n    this.http.get<User[]>(this.getHost() + \"users/\").subscribe((data: User[])=>{\n      this.userList.next(data)\n    })\n  }\n\n  getCookie(name) {\n    var cookieValue = null;\n    if (document.cookie && document.cookie !== '') {\n      var cookies = document.cookie.split(';');\n      for (var i = 0; i < cookies.length; i++) {\n        var cookie = cookies[i].trim();\n        // Does this cookie string begin with the name we want?\n        if (cookie.substring(0, name.length + 1) === (name + '=')) {\n          cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n          break;\n        }\n      }\n    }\n    return cookieValue;\n  }\n\n  public getHost() {\n    var host = window.location.host\n    if (host == \"localhost:4200\" || host == \"127.0.0.1:8000\") {\n      return \"http://127.0.0.1:8000/\"\n    }\n    else {\n      return \"https://limitless-wildwood-61701.herokuapp.com/\"\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, throwError, BehaviorSubject, Subject, Subscription, } from 'rxjs';\nimport { Node } from './node';\nimport { AuthenticationService } from './authentication.service';\nimport { delay } from 'rxjs/operators';\nimport { Tree } from './tree';\ndeclare const ReconnectingWebSocket: any;\n@Injectable({\n  providedIn: 'root'\n})\n\n\n\n\n\nexport class DataReceptionService {\n  public tree_data = new Subject<Tree[]>()\n  public task_data = new BehaviorSubject<any>({})\n  constructor(private auth: AuthenticationService) { }\n\n  getSocketPath(): string{\n    var ws_scheme = window.location.protocol == \"https:\" ? \"wss\" : \"ws\";\n    var host = window.location.host;\n    if (host == \"localhost:4200\"){\n      host = \"127.0.0.1:8000\"\n    }\n    var ws_path = ws_scheme + '://' + host + \"/treeChannel/\"\n     /* var ws_path = \"ws://limitless-wildwood-61701.herokuapp.com/treeChannel/\" */\n    return ws_path\n  }\n\n  createConnection() {\n\n\n    var socket = new ReconnectingWebSocket(this.getSocketPath() + \"tree/\")\n    console.log(\"Connecting to \" + this.getSocketPath());\n    //let socket = new WebSocket(\"wss://limitless-wildwood-61701.herokuapp.com/treeChannel\");\n    let dis = this\n    socket.onmessage = (event) => {\n      this.tree_data.next(JSON.parse(event.data))\n\n      //update.apply(this)\n    };\n\n    var taskSocket = new ReconnectingWebSocket(this.getSocketPath() + \"task/\")\n    console.log(\"Connecting to \" + this.getSocketPath() + \"task/\");\n    //let socket = new WebSocket(\"wss://limitless-wildwood-61701.herokuapp.com/treeChannel\");\n\n    taskSocket.onmessage = (event) => {\n      this.task_data.next(JSON.parse(event.data))\n\n      //update.apply(this)\n    };\n\n  }\n}\n\n//ws://127.0.0.1:8000/treeChannel/task/\n","import { Component, OnInit, ViewChild, ElementRef, AfterViewInit, HostListener, OnDestroy } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { LoginComponent } from '../login/login.component';\r\nimport { AuthenticationService } from '../authentication.service';\r\nimport { User } from '../user';\r\nimport { RegisterComponent } from '../register/register.component';\r\nimport { PurchaseService } from '../purchase.service';\r\nimport { DataReceptionService } from '../data-reception.service';\r\nimport { Node } from '../node';\r\nimport { TreeGeneratorService } from '../tree-generator.service';\r\nimport { MDCTabBar } from '@material/tab-bar';\r\nimport { PurchaseComponent } from '../purchase/purchase.component';\r\nimport { Subject, BehaviorSubject, interval, Subscription } from 'rxjs';\r\nimport { debounce, skip, throttle, delay } from 'rxjs/operators';\r\nimport {ThemePalette} from '@angular/material/core';\r\nimport {ProgressSpinnerMode} from '@angular/material/progress-spinner';\r\nimport { Tree } from '../tree';\r\n\r\n\r\ndeclare const d3: any;\r\n\r\n@Component({\r\n  selector: 'app-homepage',\r\n  templateUrl: './homepage.component.html',\r\n  styleUrls: ['./homepage.component.css']\r\n})\r\nexport class HomepageComponent implements OnInit, AfterViewInit, OnDestroy {\r\n  color: ThemePalette = 'primary';\r\n  mode: ProgressSpinnerMode = 'determinate';\r\n  value = 50;\r\n  allTrees: Tree[];\r\n  user: User;\r\n  users: User[]\r\n  index: number = 0\r\n  dataSubscription: Subscription\r\n\r\n  task: any;\r\n\r\n  public reload: Subject<any>\r\n  constructor(\r\n    public dialog: MatDialog,\r\n    public auth: AuthenticationService,\r\n    public purchase: PurchaseService,\r\n    public data_service: DataReceptionService,\r\n    public tree_service: TreeGeneratorService,\r\n\r\n\r\n  ) { }\r\n  @HostListener('window:resize', ['$event'])\r\n  dostuff() {\r\n        //this.allTrees.forEach((tree, index)=>this.renderTree(this.allTrees[index],index))\r\n        console.log(\"reload triggered by window size change\")\r\n        this.reload.next(\"oh yea\")\r\n      }\r\n\r\n/*\r\n//.pipe(\r\n  throttle(ev => interval(2000), { leading: true, trailing: true }),\r\n  ) */\r\n\r\n  ngOnInit(): void {\r\n\r\n\r\n    this.reload = new Subject()\r\n    //.pipe(debounce(() => interval(2000)))\r\n    this.reload.pipe(debounce(() => interval(500))).subscribe(() => {\r\n     // d3.selectAll(\".genericClass\").select(\"svg\").remove();\r\n        console.log(\"reload after debounce\")\r\n        this.allTrees.forEach((tree, index) => this.renderTree(tree, index, this.allTrees[0].users))\r\n        console.log(\"didnt crash yet\")\r\n    })\r\n//it should start failing from here\r\n    this.dataSubscription = this.data_service.tree_data.subscribe((result) => {\r\n      this.allTrees = result.sort((a, b) => b.nodes.length - a.nodes.length)// why is this not failing\r\n      if (result.length > 0) {\r\n        console.log(\"data arrived \")\r\n        this.reload.next(\"reload baby\")\r\n        console.log(\"reload done\")\r\n      }\r\n    })\r\n\r\n      //this.auth.user.next({username: \"cumLord\"})\r\n    this.auth.get_user();\r\n    this.auth.user.subscribe((result) => {\r\n      this.user = result\r\n    })\r\n    this.auth.userList.subscribe(dataResponse => {\r\n      this.users = dataResponse\r\n    })\r\n  }\r\n\r\n\r\n  tabs: any[] = [\r\n    {\r\n      selected: true,\r\n      name: \"First Tree\"\r\n    },\r\n    {\r\n      selected: false,\r\n      name: \"Second Tree\"\r\n    },\r\n    {\r\n      selected: false,\r\n      name: \"Third Tree\"\r\n    },\r\n    {\r\n      selected: false,\r\n      name: \"Fourth Tree\"\r\n    },\r\n    {\r\n      selected: false,\r\n      name: \"Fifth Tree\"\r\n    },\r\n  ]\r\n\r\n  selectTab(index) {\r\n    this.tabs.forEach(tab => tab.selected = false)\r\n    this.tabs[index].selected = true\r\n    //this.loading= false;\r\n  }\r\n  renderTree(tree, index, users_list): void {\r\n\r\n    var dims = { height: 1000, width: 2000 };\r\n    d3.select(\"#canvas-\" + index).selectAll(\"*\").remove()\r\n    console.log(\"removed svg \")\r\n\r\n    //https://www.w3schools.com/jsref/dom_obj_all.asp\r\n    try{\r\n      var scale = d3.scaleOrdinal(d3[\"schemeSet3\"])// share scale between different types of trees\r\n      .domain(users_list.sort())\r\n      var graph = this.tree_service.generateTree(users_list, tree.nodes, window.innerWidth * 0.97, window.innerHeight, scale);\r\n      var graph_blobs = this.tree_service.generateBlobTree(users_list, tree.blobs, window.innerWidth *0.97, window.innerHeight,scale);\r\n\r\n      console.log(\"adding svg \")\r\n      var svg = d3.select(\"#canvas-\" + index).append(\"svg\")\r\n      .attr('width', window.innerWidth)\r\n      .attr('height', window.innerHeight * 0.80);\r\n\r\n  svg.append(() => graph.node()).attr('transform', d => `translate(${10}, ${15})`);\r\n  svg.append(() => graph_blobs.node()).attr('transform', d => `translate(${10}, ${15})`);\r\n\r\n  console.log(\"dunno\")\r\n    }\r\n\r\n    catch (e){\r\nconsole.log(\"failed to draw a tree: \", e.message)\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n  delete() {\r\n    this.purchase.reset();\r\n\r\n  }\r\n\r\n  openDialog(): void {\r\n    const dialogRef = this.dialog.open(LoginComponent, {\r\n      width: '250px',\r\n      data: {}\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n    });\r\n  }\r\n\r\n\r\n  openRegDialog(): void {\r\n    const regDialog = this.dialog.open(RegisterComponent, {\r\n      width: '250px',\r\n      data: {}\r\n    })\r\n  }\r\n\r\n  purchaseDialog(): void {\r\n    let Dialog = this.dialog.open(PurchaseComponent, {\r\n      width: 'auto',\r\n      data: {}\r\n    })\r\n  }\r\n  logout(): void {\r\n    this.auth.logout()\r\n  }\r\n  nameFunction() {\r\n    return \"a name\"\r\n  }\r\n\r\n\r\n  ngAfterViewInit(): void {\r\n\r\n\r\n\r\n\r\n    this.data_service.task_data.subscribe((result) => {\r\n\r\n      this.task = result\r\n      //this.taskFraction = result.fraction * 100\r\n\r\n    })\r\n    this.data_service.createConnection()\r\n\r\n\r\n  }\r\nngOnDestroy():void{\r\n  this.dataSubscription.unsubscribe()\r\n}\r\n\r\n}\r\n","<mat-toolbar>\n  <div *ngIf=\"!user; else elseBlock\">\n    <button mat-raised-button color=\"warn\" [matMenuTriggerFor]=\"aboveMenu\">Hello stranger</button>\n    <mat-menu #aboveMenu=\"matMenu\" yPosition=\"above\">\n      <button (click)=\"openDialog()\" mat-menu-item>Log in</button>\n      <button (click)=\"openRegDialog()\" mat-menu-item>Register</button>\n    </mat-menu>\n  </div>\n\n  <ng-template #elseBlock>\n    <div>\n      <button mat-stroked-button [matMenuTriggerFor]=\"aboveMenu\">Hello {{user.username}}</button>\n      <mat-menu #aboveMenu=\"matMenu\" yPosition=\"above\">\n        <button (click)=\"logout()\" mat-menu-item>Logout</button>\n        <button mat-menu-item>Profile</button>\n      </mat-menu>\n    </div>\n  </ng-template>\n\n  <button (click)=\"purchaseDialog()\" style=\"margin: 10px;\" color=\"basic\" mat-raised-button color=\"\">Shop</button>\n\n  <mat-progress-spinner   class=\"progressClass\" [diameter]=\"46\"\n    [value]=\"task?.fraction ? task.fraction * 100: 0\">\n  </mat-progress-spinner>\n\n  <p style =\" text-align: center; margin-left: auto;\n  margin-right: auto;\"> {{task?.text}}</p>\n\n\n\n\n\n  <button mat-mini-fab color=\"basic\" aria-label=\"Example icon button with a delete icon\" style=\"  margin-left: auto; \"\n    (click)=\"delete()\">\n    <mat-icon>delete</mat-icon>\n  </button>\n</mat-toolbar>\n\n<div class=\"tab_bar\">\n  <button *ngFor=\"let tree of allTrees; index as i\" class=\"tab_item\" [class.tab_item_selected]=\"tabs[i].selected\"\n    (click)=selectTab(i) mat-raised-button color=\"\">{{tabs[i].name}}</button>\n</div>\n\n<div *ngFor=\"let tree of allTrees; index as i\" class=\"\" [class.selected]=\"tabs[i].selected\"\n  [class.content]=\"!tabs[i].selected\">\n  <div class=\"genericClass\" [attr.id]=\"'canvas-' + i\"></div>\n</div>\n\n\n<!--\n<div class=\"fa-9x loaderHolder\" [class.hidden]=\"!loading\" [class.loaderHolder]=\"loading\">\n  <i class=\"fas fa-cog fa-spin\" style=\"margin:auto\"></i>\n</div>\n -->\n","import { Component, OnInit } from '@angular/core';\n//import { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material\";\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { AuthenticationService } from '../authentication.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  form: FormGroup;\n  //public profileForm: FormGroup;\n\n  profileForm = new FormGroup({\n    username: new FormControl(''),\n    password: new FormControl(''),\n  })\n  constructor(\n    private auth: AuthenticationService,\n    private dialogRef: MatDialogRef<LoginComponent>,\n  ) {}\n\n  ngOnInit(): void {\n\n\n  }\n\n\n\n  save() {\n    this.auth.login(\n      this.profileForm.controls.username.value,\n      this.profileForm.controls.password.value)\n\n    this.dialogRef.close(this.profileForm.value);\n  }\n\n  cancel(){\n    this.dialogRef.close()\n  }\n}\n","<p>login works!</p>\n<h1 mat-dialog-title>Login form</h1>\n<form [formGroup]=\"profileForm\">\n  <mat-form-field class=\"\">\n    <mat-label>User name</mat-label>\n    <input matInput #username maxlength=\"256\" type = \"string\" placeholder=\"password\"  formControlName=\"username\">\n    <mat-hint align=\"start\"><strong>Any name</strong> </mat-hint>\n  </mat-form-field>\n  <mat-form-field class=\"\">\n    <mat-label>Password</mat-label>\n    <input matInput #password1 maxlength=\"256\" type = \"password\" placeholder=\"password\" formControlName=\"password\">\n    <mat-hint align=\"start\"><strong>a strong password</strong> </mat-hint>\n  </mat-form-field>\n\n</form>\n<!-- <button mat-button [mat-dialog-close]=  cdkFocusInitial>Ok</button> -->\n<button mat-button (click)=\"cancel()\">Cancel</button>\n<button mat-button (click)=\"save()\">Login</button>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { AuthenticationService } from './authentication.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PurchaseService {\n\n  constructor(private http: HttpClient, private auth: AuthenticationService) { }\n\n  purchase(amount) {\n    let csrf = this.auth.getCookie('csrftoken')\n    csrf = csrf == null? \"something\":csrf;\n\n    let csrfheader = new HttpHeaders({ 'X-CSRFToken': csrf })\n    console.log(this.auth.getHost() + \"tree/buy/\")\n    this.http.post(this.auth.getHost() + \"tree/buy/\", { \"amount\": amount}, { headers: csrfheader })\n      .subscribe(() => {})\n  }\n\n  reset(){\n    this.http.get(this.auth.getHost() + \"delete\")\n    .subscribe(() => {\n      //nothing to do here\n    })\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { PurchaseService } from '../purchase.service';\n@Component({\n  selector: 'app-purchase',\n  templateUrl: './purchase.component.html',\n  styleUrls: ['./purchase.component.css']\n})\nexport class PurchaseComponent implements OnInit {\n\n  constructor(\n    private dialogRef: MatDialogRef<PurchaseComponent>,\n    public purchase: PurchaseService,\n    ) { }\n\n  ngOnInit(): void {\n  }\n  save(amount) {\n    this.purchase.purchase(amount)\n\n    this.dialogRef.close();\n  }\n\n}\n","  <form class=\"example-form\">\n    <mat-form-field class=\"example-full-width\">\n      <mat-label>Amount</mat-label>\n      <input matInput #message maxlength=\"256\" type=\"number\" placeholder=\"999\">\n      <mat-hint align=\"start\"><strong>Numbers only</strong> </mat-hint>\n      <mat-hint align=\"end\"> max 5000</mat-hint>\n    </mat-form-field>\n  </form>\n  <button (click)=\"save(message.value)\" [disabled]=\"false\" mat-raised-button>Buy</button>\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../authentication.service';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { FormGroup, FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  constructor(\n    private auth: AuthenticationService,\n\n\n    private dialogRef: MatDialogRef<RegisterComponent>,\n  ) { }\n\n  profileForm = new FormGroup({\n    username: new FormControl(''),\n    password: new FormControl(''),\n    password2: new FormControl(''),\n  })\n  save() {\n    this.auth.register(\n      this.profileForm.controls.username.value,\n      this.profileForm.controls.password.value)\n\n    this.dialogRef.close(this.profileForm.value);\n  }\n\n  cancel(){\n    this.dialogRef.close()\n  }\n  ngOnInit(): void {\n  }\n\n}\n","\n<h1 mat-dialog-title>Register form</h1>\n<form [formGroup]=\"profileForm\">\n  <mat-form-field class=\"\">\n    <mat-label>User name</mat-label>\n    <input matInput #username maxlength=\"256\" type = \"string\" placeholder=\"some_name\"  formControlName=\"username\">\n    <mat-hint align=\"start\"><strong>Any name</strong> </mat-hint>\n  </mat-form-field>\n  <mat-form-field class=\"\">\n    <mat-label>Password</mat-label>\n    <input matInput #password1 maxlength=\"256\" type = \"password\" placeholder=\"password\" formControlName=\"password\">\n    <mat-hint align=\"start\"><strong>a strong password</strong> </mat-hint>\n  </mat-form-field>\n\n  <mat-form-field class=\"\">\n    <mat-label>Password</mat-label>\n    <input matInput #password1 maxlength=\"256\" type = \"password\" placeholder=\"password\" formControlName=\"password2\">\n    <mat-hint align=\"start\"><strong>Repeat password</strong> </mat-hint>\n  </mat-form-field>\n\n</form>\n<!-- <button mat-button [mat-dialog-close]=  cdkFocusInitial>Ok</button> -->\n<button mat-button (click)=\"cancel()\">Cancel</button>\n<button mat-button (click)=\"save()\">Register</button>\n","import { Directive, Input, Renderer2, ElementRef, OnInit } from '@angular/core';\n\n@Directive({\n  selector: '[appTreeDirective]'\n})\nexport class TreeDirectiveDirective implements OnInit {\n@Input() treeData:any;\n  constructor(private renderer: Renderer2, private elementRef: ElementRef) { }\nngOnInit(): void{\n  const div = this.renderer.createElement('div');\n  //const text = this.renderer.createText('Hello world!');\nthis.renderer.setAttribute(div, \"innerHtml\",\"<p> hehe </p>\")\n  //this.renderer.appendChild(div, text);\n  this.renderer.appendChild(this.elementRef.nativeElement, div)\n}\n}\n","import { Injectable } from '@angular/core';\r\nimport { User } from './user';\r\nimport { Node } from './node';\r\n declare const d3:any;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TreeGeneratorService {\r\n\r\n  constructor() { }\r\n/*   public generateLegend(users: User[]){\r\n\r\n  } */\r\n  public generateBlobTree(users:string[], data:any[], width, height, scale):any{\r\n    //create blob type\r\n    d3.create\r\n    var height:any = height - 200\r\n    //add the group element that will contain all the drawings of the graph\r\n    //graph = svg.append('g').attr('transform', 'translate(50, 50)');\r\n    users = users.sort((a,b) => a.localeCompare(b))\r\n    console.log(users, \"users \")\r\n    var graph = d3.create('svg:g');\r\n\r\n/*     scale = d3.scaleOrdinal(d3[\"schemeSet3\"])\r\n      .domain(users.map((element) => element.username)) */\r\n\r\n    graph.selectAll('.node').remove();//no needed\r\n    graph.selectAll('.link').remove();\r\n\r\n\r\n    data.sort((a, b) => a.number - b.number)\r\n\r\n/*     let even = data.filter((a)=>a.number%2 == 0).sort((a,b)=>b.number - a .number)\r\n    let odd = data.filter((a)=>a.number%2 == 1).sort((a,b)=>a.number - b .number)\r\n\r\n    data = even.concat(odd) */\r\n\r\n/*\r\n    data.sort((a, b) => a.number % 2 == 0 ?  b.number - a.number:0)\r\n\r\n    data.sort((a, b) => a.number % 2 == 1 ? a.number - b.number:0)\r\n */\r\n\r\n\r\n\r\n    console.log(data, \" data that is not sorted\")\r\n    // this is broken !! sort on the serverside\r\n    // stratify the data\r\n/*     var rootNode = d3.stratify()\r\n      .id(function (d:any) {\r\n        return d.number\r\n      })\r\n      .parentId(function (d:any) {\r\n        return d.parent;\r\n      })\r\n      (data) */\r\n    //stratified data -> tree form data\r\n\r\n    //var treeData = d3.tree().size([width * 0.97, height*0.75])(rootNode)\r\n\r\n    //create the selection of nodes from the tree data descendants\r\n/*\r\n    var nodes = graph.selectAll('.node')\r\n      .data(treeData.descendants())\r\n */\r\nvar nodes = graph.selectAll('.node')\r\n.data(data)\r\n\r\n/*\r\nvar nodes2 = graph.selectAll('.node')\r\n.data(treeData.descendants())\r\n */\r\n\r\n    // save the links data from the stratified data\r\n    // for now no links :)\r\n/*     var links = graph.selectAll('.link').data(rootNode.links())\r\n\r\n    // draw the links as path elements\r\n    links.enter().append('path')\r\n      .attr('stroke', 'blue')\r\n      .attr('d', d3.linkVertical()\r\n        .x(function (d) { return d.data.x * width})\r\n        .y(function (d) { return d.data.y * height }))\r\n      .attr('class', 'link')\r\n      .attr('fill', 'none')\r\n      .attr('stroke', d => d.target.data.hasOwnProperty('userName') ? scale(d.source.data.userName) : 'gray')////#aaa\r\n      .attr('stroke-width', 2) */\r\n\r\n    // add a group for each node with the specified coordinates\r\n    var enterNodes = nodes.enter().append('g')\r\n      .attr('transform', (d, i, n) => {\r\n        //rotates the tree\r\n        let x = d.x *width\r\n        let y = d.y * height\r\n        return `translate(${x},${y})`\r\n      })\r\n      .attr('class', \"node\")\r\n\r\n    // draw rectangles in each node group\r\n    var rectangles = enterNodes.append('rect')\r\n      .attr('fill', d => d.userName != null ? scale(d.userName) : 'gray')\r\n      .attr('stroke', 'black')\r\n      .attr('width',d =>{\r\n        let boxWidth = d.grow_to * width - d.x * width +30\r\n        return boxWidth// >= 30? boxWidth: 30\r\n      } )// d.growto * width - d.x * width //d.spread * width + 30\r\n      .attr('height', 30)\r\n      .attr('transform', d => `translate(${-5}, ${-10})`).raise();\r\n    // add a click event on each rectangle\r\n    enterNodes.on(\"click\", (d) => {\r\n      console.log(d)\r\n    })\r\n    enterNodes.on(\"mouseenter\", (d) => {\r\n\r\n    })\r\n    // add text to each of the node groups\r\n    // add more stuff to this like to and from\r\n    enterNodes.append('text')\r\n      .text((d) => { return d.number })\r\n      .attr('fill', d => d.childrenMissing > 0 ? 'black' : \"red\")\r\n      .attr('transform', d => `translate(${2}, ${10})`);\r\n//already done by the other function\r\n   /*  var colorLegend = d3.legendColor()\r\n      .shape(\"path\", d3.symbol().type(d3.symbolTriangle).size(150)())\r\n      .shapePadding(10)\r\n      //use cellFilter to hide the \"e\" cell\r\n      .cellFilter(function (d) { return d.label !== \"e\" })\r\n      .scale(scale)\r\n\r\n    graph.append(\"g\")\r\n      .attr(\"class\", \"userLegend\")\r\n    graph.select(\".userLegend\").call(colorLegend) */\r\n\r\n    return graph\r\n  }\r\n\r\n\r\n  public generateTree(users:string[], data:Node[], width, height, scale):any{\r\n\r\n    d3.create //wtf does this do?\r\n    var height:any = height - 200\r\n    //add the group element that will contain all the drawings of the graph\r\n    //graph = svg.append('g').attr('transform', 'translate(50, 50)');\r\n    users = users.sort((a,b) => a.localeCompare(b))\r\n    console.log(users, \"users \")\r\n    var graph = d3.create('svg:g');\r\n\r\n/*     scale = d3.scaleOrdinal(d3[\"schemeSet3\"])\r\n      .domain(users) *///.map((element) => element.username))\r\n\r\n    graph.selectAll('.node').remove();\r\n    graph.selectAll('.link').remove();\r\n\r\n\r\n    data.sort((a, b) => a.number - b.number)\r\n\r\n    let even = data.filter((a)=>a.number%2 == 0).sort((a,b)=>b.number - a .number)\r\n    let odd = data.filter((a)=>a.number%2 == 1).sort((a,b)=>a.number - b .number)\r\n\r\n    data = even.concat(odd)\r\n\r\n/*\r\n    data.sort((a, b) => a.number % 2 == 0 ?  b.number - a.number:0)\r\n\r\n    data.sort((a, b) => a.number % 2 == 1 ? a.number - b.number:0)\r\n */\r\n\r\n\r\n\r\n    console.log(data, \" data that is not sorted\")\r\n    // this is broken !! sort on the serverside\r\n    // stratify the data\r\n    var rootNode = d3.stratify()\r\n      .id(function (d:any) {\r\n        return d.number\r\n      })\r\n      .parentId(function (d:any) {\r\n        return d.parent;\r\n      })\r\n      (data)\r\n    //stratified data -> tree form data\r\n\r\n    //var treeData = d3.tree().size([width * 0.97, height*0.75])(rootNode)\r\n\r\n    //create the selection of nodes from the tree data descendants\r\n/*\r\n    var nodes = graph.selectAll('.node')\r\n      .data(treeData.descendants())\r\n */\r\nvar nodes = graph.selectAll('.node')\r\n.data(data)\r\n\r\n/*\r\nvar nodes2 = graph.selectAll('.node')\r\n.data(treeData.descendants())\r\n */\r\n\r\n    // save the links data from the stratified data\r\n    var links = graph.selectAll('.link').data(rootNode.links())\r\n\r\n    // draw the links as path elements\r\n    links.enter().append('path')\r\n      .attr('stroke', 'blue')\r\n      .attr('d', d3.linkVertical()\r\n        .x(function (d) { return d.data.x * width})\r\n        .y(function (d) { return d.data.y * height }))\r\n      .attr('class', 'link')\r\n      .attr('fill', 'none')\r\n      .attr('stroke', d => d.target.data.hasOwnProperty('userName') ? scale(d.source.data.userName) : 'gray')////#aaa\r\n      .attr('stroke-width', 2)\r\n\r\n    // add a group for each node with the specified coordinates\r\n    var enterNodes = nodes.enter().append('g')\r\n      .attr('transform', (d, i, n) => {\r\n        //rotates the tree\r\n        let x = d.x *width\r\n        let y = d.y * height\r\n        return `translate(${x},${y})`\r\n      })\r\n      .attr('class', \"node\")\r\n\r\n    // draw rectangles in each node group\r\n    var rectangles = enterNodes.append('rect')\r\n      .attr('fill', d => d.userName != null ? scale(d.userName) : 'gray')\r\n      .attr('stroke', 'black')\r\n      .attr('width', 30)//d.spread * width + 30\r\n      .attr('height', 30)\r\n      .attr('transform', d => `translate(${-5}, ${-10})`).raise();\r\n    // add a click event on each rectangle\r\n    enterNodes.on(\"click\", (d) => {\r\n      console.log(d)\r\n    })\r\n    enterNodes.on(\"mouseenter\", (d) => {\r\n\r\n    })\r\n    // add text to each of the node groups\r\n    enterNodes.append('text')\r\n      .text((d) => { return d.number })\r\n      .attr('fill', d => d.childrenMissing > 0 ? 'black' : \"red\")\r\n      .attr('transform', d => `translate(${2}, ${10})`);\r\n\r\n      var colorLegend = d3.legendColor()\r\n      .shape(\"path\", d3.symbol().type(d3.symbolTriangle).size(150)())\r\n      .shapePadding(40)\r\n      //use cellFilter to hide the \"e\" cell\r\n      .cellFilter(function (d) { return d.label !== \"e\" })\r\n      .scale(scale)\r\n      graph.append(\"g\")\r\n      .attr(\"class\", \"userLegend\")\r\n      graph.select(\".userLegend\").call(colorLegend)\r\n\r\n    return graph\r\n  }\r\n}\r\n","import { Component, OnInit, AfterViewInit, AfterContentInit, Input } from '@angular/core';\r\nimport { AuthenticationService } from '../authentication.service';\r\nimport { User } from '../user';\r\nimport { Node } from '../node';\r\nimport { TreeGeneratorService } from '../tree-generator.service';\r\ndeclare const ReconnectingWebSocket: any;\r\ndeclare const d3: any;\r\n\r\n\r\n@Component({\r\n  selector: 'app-tree',\r\n  templateUrl: './tree.component.html',\r\n  styleUrls: ['./tree.component.css']\r\n})\r\nexport class TreeComponent implements OnInit, AfterViewInit {\r\n\r\n  constructor(\r\n    public auth: AuthenticationService,\r\n    public tree_service: TreeGeneratorService) { }\r\n  //public data: any[]\r\n  public users: User[]\r\n  update: void;\r\n  name: string;\r\n  @Input() data: Node[];\r\n  @Input() index:number;\r\n\r\n  ngOnInit(): void {\r\n    console.log(this.data, \" its the mofoking data\")\r\n    this.auth.userList.subscribe(dataResponse => {\r\n\r\n      this.users = dataResponse\r\n\r\n\r\n      console.log(this.users, \"this is the users data form subscription\")\r\n    })\r\n    this.name = this.data.length.toString()\r\n\r\n  }\r\n  ngAfterViewInit(): void {\r\n\r\n    /* setTimeout(() => {\r\n      var dims = { height: 1400, width: 800 };\r\n      var svg = d3.selectAll(\".canvas\")\r\n        .append('svg')\r\n        .attr('width', dims.width + 100)\r\n        .attr('height', dims.height + 100);\r\n      var graph = this.tree_service.generateTree(this.users,this.data);\r\n      console.log(graph.node(), \" nodes\")\r\n      svg.append(()=>graph.node())\r\n      svg.append(()=>graph.node())\r\n    }, 0); */\r\n\r\n  }\r\n\r\n}\r\n//setTimeout(() => {\r\n/*   var graph\r\n    var svg\r\n    const dims = { height: 1400, width: 800 };\r\n    svg = d3.selectAll(\".canvas\")\r\n      .append('svg')\r\n      .attr('width', dims.width + 100)\r\n      .attr('height', dims.height + 100);\r\n    //add the group element that will contain all the drawings of the graph\r\n\r\n    //graph = svg.append('g').attr('transform', 'translate(50, 50)');\r\n    var graph = d3.create('svg:g');\r\n    var scale;\r\n    scale = d3.scaleOrdinal(d3[\"schemeSet3\"])\r\n      .domain(this.users.map((element) => element.username))\r\n\r\n    graph.selectAll('.node').remove();\r\n    graph.selectAll('.link').remove();\r\n    this.data.sort((a, b) => a.number - b.number)\r\n    this.data.sort((a, b) => a.number % 2 == 1 ? a.number - b.number : b.number - a.number)\r\n    console.log(this.data, \"data before stratify\")\r\n    // stratify the data\r\n    var rootNode = d3.stratify()\r\n      .id(function (d) {\r\n        return d.number\r\n      })\r\n      .parentId(function (d) {\r\n        return d.parent;\r\n      })\r\n      (this.data)\r\n    //stratified data -> tree form data\r\n    var treeData = d3.tree().size([1400, 800])(rootNode)\r\n    //create the selection of nodes from the tree data descendants\r\n    var nodes = graph.selectAll('.node')\r\n      .data(treeData.descendants())\r\n\r\n    // save the links data from the stratified data\r\n    var links = graph.selectAll('.link').data(rootNode.links())\r\n\r\n    // draw the links as path elements\r\n    links.enter().append('path')\r\n      .attr('stroke', 'blue')\r\n      .attr('d', d3.linkHorizontal()\r\n        .x(function (d) { return d.y; })\r\n        .y(function (d) { return d.x; }))\r\n      .attr('class', 'link')\r\n      .attr('fill', 'none')\r\n      .attr('stroke', d => d.target.data.hasOwnProperty('userName') ? scale(d.source.data.userName) : 'gray')////#aaa\r\n      .attr('stroke-width', 2)\r\n\r\n    // add a group for each node with the specified coordinates\r\n    var enterNodes = nodes.enter().append('g')\r\n      .attr('transform', (d, i, n) => {\r\n        //rotates the tree\r\n        let x = d.y\r\n        let y = d.x\r\n        return `translate(${x},${y})`\r\n      })\r\n      .attr('class', \"node\")\r\n\r\n    // draw rectangles in each node group\r\n    var rectangles = enterNodes.append('rect')\r\n      .attr('fill', d => d.data.userName != null ? scale(d.data.userName) : 'gray')\r\n      .attr('stroke', 'black')\r\n      .attr('width', 30)//30\r\n      .attr('height', 30)\r\n      .attr('transform', d => `translate(${-5}, ${-10})`).raise();\r\n    // add a click event on each rectangle\r\n    enterNodes.on(\"click\", (d) => {\r\n      console.log(d)\r\n    })\r\n    enterNodes.on(\"mouseenter\", (d) => {\r\n      console.log(d)\r\n    })\r\n    // add text to each of the node groups\r\n    enterNodes.append('text')\r\n      .text((d) => { return d.data.number })\r\n      .attr('fill', d => d.data.childrenMissing > 0 ? 'black' : \"red\")\r\n      .attr('transform', d => `translate(${2}, ${10})`);\r\n\r\n    var colorLegend = d3.legendColor()\r\n      .shape(\"path\", d3.symbol().type(d3.symbolTriangle).size(150)())\r\n      .shapePadding(10)\r\n      //use cellFilter to hide the \"e\" cell\r\n      .cellFilter(function (d) { return d.label !== \"e\" })\r\n      .scale(scale)\r\n\r\n    graph.append(\"g\")\r\n      .attr(\"class\", \"userLegend\")\r\n    graph.select(\".userLegend\").call(colorLegend) */\r\n\r\n//svg.append(()=>graph.node())\r\n//},0);\r\n\r\n  //}\r\n\r\n\r\n","\n<div class=\"container\" style=\"float:left; width: auto; height: auto\">\n\n  <div class =\"canvas\" style=\"border: solid black;\">\n\n  </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}