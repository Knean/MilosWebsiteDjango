{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/authentication.service.ts","webpack:///src/app/data-reception.service.ts","webpack:///src/app/homepage/homepage.component.ts","webpack:///src/app/homepage/homepage.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/purchase.service.ts","webpack:///src/app/purchase/purchase.component.ts","webpack:///src/app/purchase/purchase.component.html","webpack:///src/app/register/register.component.ts","webpack:///src/app/register/register.component.html","webpack:///src/app/tree-directive.directive.ts","webpack:///src/app/tree-generator.service.ts","webpack:///src/app/tree/tree.component.ts","webpack:///src/app/tree/tree.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","AuthenticationService","http","user","userList","username","password","csrf","getCookie","csrfheader","console","log","getHost","post","headers","subscribe","get_user","get","login","data","next","users","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","host","window","location","providedIn","DataReceptionService","auth","tree_data","ws_path","socket","ReconnectingWebSocket","dis","onmessage","event","JSON","parse","value","HomepageComponent","dialog","purchase","data_service","tree_service","allTrees","index","loading","tabs","selected","forEach","tab","dims","height","width","svg","d3","select","append","attr","innerWidth","innerHeight","graph","generateTree","node","d","reset","dialogRef","open","afterClosed","result","regDialog","Dialog","logout","dataResponse","createConnection","setTimeout","selectAll","remove","tree","renderTree","purchaseDialog","LoginComponent","profileForm","controls","close","cancel","save","PurchaseService","amount","PurchaseComponent","RegisterComponent","password2","register","TreeDirectiveDirective","renderer","elementRef","div","createElement","setAttribute","appendChild","nativeElement","TreeGeneratorService","sort","a","b","localeCompare","create","scale","scaleOrdinal","domain","map","element","number","rootNode","stratify","parentId","parent","treeData","size","nodes","descendants","links","enter","linkVertical","x","y","target","hasOwnProperty","source","userName","enterNodes","n","rectangles","raise","on","text","childrenMissing","colorLegend","legendColor","shape","symbol","type","symbolTriangle","shapePadding","cellFilter","label","call","TreeComponent","toString","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'milosSite';\n\n\n\n\n}\n","<app-homepage></app-homepage>\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomepageComponent } from './homepage/homepage.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { TreeComponent } from './tree/tree.component';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport { LoginComponent } from './login/login.component';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RegisterComponent } from './register/register.component';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport { TreeDirectiveDirective } from './tree-directive.directive';\nimport { PurchaseComponent } from './purchase/purchase.component';\nimport {MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomepageComponent,\n    TreeComponent,\n    LoginComponent,\n    RegisterComponent,\n    TreeDirectiveDirective,\n    PurchaseComponent,\n  ],\n\n  imports: [\n    MatTabsModule,\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatMenuModule,\n    MatIconModule,\n    MatDialogModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MatToolbarModule,\n    MatProgressSpinnerModule,\n    MatSidenavModule,\n    FontAwesomeModule\n  ],\n\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, throwError, BehaviorSubject, Subscription } from 'rxjs';\nimport { catchError, retry } from 'rxjs/operators';\n\n\nimport { User } from './user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\nmario:User\n\n\n  constructor(private http: HttpClient) { }\n\n  public user = new BehaviorSubject<User>(null)\n  public userList = new BehaviorSubject<User[]>([])\n\n  login(username, password) {\n    let csrf = this.getCookie('csrftoken')\n    let csrfheader = new HttpHeaders({ 'X-CSRFToken': csrf })\n    console.log(this.getHost() + \"auth/login/\")\n    this.http.post(this.getHost() + \"auth/login/\", { \"username\": username, \"password\": password }, { headers: csrfheader }).\n      subscribe(() => this.get_user())\n  }\n  logout() {\n\n    this.http.get(this.getHost() + \"auth/logout/\")\n      .subscribe(() => {\n        this.get_user();// this.refreshCart()\n\n      })\n  }\n\n\n  register(username, password) {\n\n    this.http.post(this.getHost() + \"auth/register/\", { \"username\": username, \"password\": password })\n\n      .subscribe(() => {\n        this.login(username, password);\n        this.get_user()\n      })\n  }\n\n  get_user() {\n    console.log(\"this is the address\" + this.getHost())\n\n    this.http.get(this.getHost() + \"auth/user/\").subscribe((data: any) => {\n      console.log(data, \"this is the data\")\n      if (data.username) {\n        this.user.next(data)\n        console.log(data.username)\n      }\n      else {\n        this.user.next(null)\n        console.log(\"we got null for the user back \")\n      }\n    })\n  }\n\n  get_users(): void {\n    let users: User[]\n    this.http.get<User[]>(this.getHost() + \"users/\").subscribe((data: User[])=>{\n      this.userList.next(data)\n    })\n  }\n\n  getCookie(name) {\n    var cookieValue = null;\n    if (document.cookie && document.cookie !== '') {\n      var cookies = document.cookie.split(';');\n      for (var i = 0; i < cookies.length; i++) {\n        var cookie = cookies[i].trim();\n        // Does this cookie string begin with the name we want?\n        if (cookie.substring(0, name.length + 1) === (name + '=')) {\n          cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n          break;\n        }\n      }\n    }\n    return cookieValue;\n  }\n\n  public getHost() {\n    var host = window.location.host\n    if (host == \"localhost:4200\" || host == \"127.0.0.1:8000\") {\n      return \"http://127.0.0.1:8000/\"\n    }\n    else {\n      return \"https://limitless-wildwood-61701.herokuapp.com/\"\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, throwError, BehaviorSubject, Subscription } from 'rxjs';\nimport { Node } from './node';\nimport { AuthenticationService } from './authentication.service';\ndeclare const ReconnectingWebSocket: any;\n@Injectable({\n  providedIn: 'root'\n})\n\n\n\n\n\nexport class DataReceptionService {\n  public tree_data = new BehaviorSubject<Node[][]>([])\n  constructor(private auth: AuthenticationService) { }\n\n  createConnection() {\n/*     var ws_scheme = window.location.protocol == \"https:\" ? \"wss\" : \"ws\";\n    var ws_path = ws_scheme + '://' + window.location.host + \"/treeChannel/\" */\n    var ws_path = \"ws://limitless-wildwood-61701.herokuapp.com/treeChannel/\"\n    var socket = new ReconnectingWebSocket(ws_path)\n    console.log(\"Connecting to \" + ws_path);\n    //let socket = new WebSocket(\"wss://limitless-wildwood-61701.herokuapp.com/treeChannel\");\n    let dis = this\n    socket.onmessage = (event) => {\n      this.tree_data.next(JSON.parse(event.data))\n      console.log(this.tree_data.value, \" coming from service\")\n      //update.apply(this)\n    };\n  }\n}\n\n\n","import { Component, OnInit, ViewChild, ElementRef, AfterViewInit, HostListener } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { LoginComponent } from '../login/login.component';\nimport { AuthenticationService } from '../authentication.service';\nimport { User } from '../user';\nimport { RegisterComponent } from '../register/register.component';\nimport { PurchaseService } from '../purchase.service';\nimport { DataReceptionService } from '../data-reception.service';\nimport { Node } from '../node';\nimport { TreeGeneratorService } from '../tree-generator.service';\nimport { MDCTabBar } from '@material/tab-bar';\nimport { PurchaseComponent } from '../purchase/purchase.component';\n\ndeclare const d3: any;\n\n@Component({\n  selector: 'app-homepage',\n  templateUrl: './homepage.component.html',\n  styleUrls: ['./homepage.component.css']\n})\nexport class HomepageComponent implements OnInit, AfterViewInit {\n  allTrees: Node[][] = []\n  user: User;\n  users: User[]\n  index: number = 0\n  loading: boolean = false;\n\n  constructor(\n    public dialog: MatDialog,\n    public auth: AuthenticationService,\n    public purchase: PurchaseService,\n    public data_service: DataReceptionService,\n    public tree_service: TreeGeneratorService\n  ) { }\n  @HostListener('window:resize', ['$event'])\n  dostuff(){\n\n      console.log( \"resized\")\n   /*    this.loading = true\n\n        d3.selectAll(\"svg\").remove();\n        this.allTrees.forEach((tree, index)=>this.renderTree(this.allTrees[index],index))\n        this.loading = false;\n        console.log(\"falsed\") */\n\n\n\n  }\n\n\n  tabs: any[] = [\n    {\n      selected: true,\n      name: \"First Tree\"\n    },\n    {\n      selected: false,\n      name: \"Second Tree\"\n    },\n    {\n      selected: false,\n      name: \"Third Tree\"\n    },\n    {\n      selected: false,\n      name: \"Fourth Tree\"\n    },\n    {\n      selected: false,\n      name: \"Fifth Tree\"\n    },\n  ]\n\n  selectTab(index) {\n\n      this.loading = true;\n\n        this.tabs.forEach(tab=>tab.selected = false)\n        console.log(this.tabs[index].name)\n        this.tabs[index].selected = true\n        this.loading = true\n\n\n\n      //this.loading= false;\n\n\n  }\n  renderTree(data, index): void {\n    console.log(\"#canvas-\"+ index)\n\n      var dims = { height: 1000, width: 2000 };\n\n      var svg = d3.select(\"#canvas-\"+ index)\n        .append('svg')\n        .attr('width', window.innerWidth)\n        .attr('height', window.innerHeight*0.80);\n      //https://www.w3schools.com/jsref/dom_obj_all.asp\n      var graph = this.tree_service.generateTree(this.users, data, window.innerWidth, window.innerHeight);\n      svg.append(() => graph.node()).attr('transform', d => `translate(${10}, ${15})`);\n\n\n\n  }\n\ndelete(){\n  this.purchase.reset();\n}\n\n  openDialog(): void {\n    const dialogRef = this.dialog.open(LoginComponent, {\n      width: '250px',\n      data: {}\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log(result, \" this is the result\");\n    });\n  }\n\n\n  openRegDialog(): void {\n    const regDialog = this.dialog.open(RegisterComponent, {\n      width: '250px',\n      data: {}\n    })\n  }\n\n  purchaseDialog(): void {\n    let Dialog = this.dialog.open(PurchaseComponent, {\n      width: 'auto',\n      data: {}\n    })\n  }\n  logout(): void {\n    this.auth.logout()\n  }\n\n/*   buy(amount): void {\n    this.purchase.purchase(amount)\n  } */\n  nameFunction() {\n    return \"a name\"\n  }\n  ngOnInit(): void {\n\n\n    //this.auth.user.next({username: \"cumLord\"})\n    this.auth.get_user();\n\n    this.auth.user.subscribe((result) => {\n      this.user = result\n    })\n    this.auth.userList.subscribe(dataResponse => {\n      this.users = dataResponse\n    })\n  }\n\n  ngAfterViewInit(): void {\n\n\n    this.data_service.createConnection()\n    this.data_service.tree_data.subscribe((result) => {\n\n          console.log(result)\n\n          this.allTrees = result\n          //this.renderTree(this.allTrees[this.index])\n\n          //flawed!! introduce web workers\n          setTimeout(() => {\n            this.loading = true;\n            d3.selectAll(\"svg\").remove();\n            result.forEach((tree, index)=>this.renderTree(this.allTrees[index],index))\n            this.loading = false;\n          }, 200);\n\n          console.log(\"falsed\")\n\n    })\n  }\n}\n","<mat-toolbar>\n  <div *ngIf=\"!user; else elseBlock\">\n    <button mat-raised-button color=\"warn\" [matMenuTriggerFor]=\"aboveMenu\">Hello stranger</button>\n    <mat-menu #aboveMenu=\"matMenu\" yPosition=\"above\">\n      <button (click)=\"openDialog()\" mat-menu-item>Log in</button>\n      <button (click)=\"openRegDialog()\" mat-menu-item>Register</button>\n    </mat-menu>\n  </div>\n\n  <ng-template #elseBlock>\n    <div>\n      <button mat-stroked-button [matMenuTriggerFor]=\"aboveMenu\">Hello {{user.username}}</button>\n      <mat-menu #aboveMenu=\"matMenu\" yPosition=\"above\">\n        <button (click)=\"logout()\" mat-menu-item>Logout</button>\n        <button mat-menu-item>Profile</button>\n      </mat-menu>\n    </div>\n  </ng-template>\n\n  <button (click)=\"purchaseDialog()\" style=\"margin: 10px;\" color=\"basic\" mat-raised-button\n    color=\"\">Shop</button>\n\n    <button mat-mini-fab color=\"basic\" aria-label=\"Example icon button with a delete icon\" style = \"  margin-left: auto; \" (click) = \"delete()\">\n      <mat-icon >delete</mat-icon>\n    </button>\n</mat-toolbar>\n\n<div class=\"tab_bar\">\n  <button *ngFor=\"let tree of allTrees; index as i\" class=\"tab_item\" [class.tab_item_selected]= \"tabs[i].selected\" (click)=selectTab(i) mat-raised-button\n    color=\"\">{{tabs[i].name}}</button>\n</div>\n\n<div *ngFor=\"let tree of allTrees; index as i\" class=\"\" [class.selected]=\"tabs[i].selected\"\n  [class.content]=\"!tabs[i].selected\">\n  <div [attr.id]=\"'canvas-' + i\"></div>\n</div>\n\n\n\n<div class=\"fa-9x loaderHolder\" [class.hidden]= \"!loading\" [class.loaderHolder] = \"loading\" >\n  <i class=\"fas fa-cog fa-spin\" style= \"margin:auto\"></i>\n</div>\n","import { Component, OnInit } from '@angular/core';\n//import { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material\";\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { AuthenticationService } from '../authentication.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  form: FormGroup;\n  //public profileForm: FormGroup;\n\n  profileForm = new FormGroup({\n    username: new FormControl(''),\n    password: new FormControl(''),\n  })\n  constructor(\n    private auth: AuthenticationService,\n    private dialogRef: MatDialogRef<LoginComponent>,\n  ) {}\n\n  ngOnInit(): void {\n\n\n  }\n\n\n\n  save() {\n    this.auth.login(\n      this.profileForm.controls.username.value,\n      this.profileForm.controls.password.value)\n\n    this.dialogRef.close(this.profileForm.value);\n  }\n\n  cancel(){\n    this.dialogRef.close()\n  }\n}\n","<p>login works!</p>\n<h1 mat-dialog-title>Login form</h1>\n<form [formGroup]=\"profileForm\">\n  <mat-form-field class=\"\">\n    <mat-label>User name</mat-label>\n    <input matInput #username maxlength=\"256\" type = \"string\" placeholder=\"password\"  formControlName=\"username\">\n    <mat-hint align=\"start\"><strong>Any name</strong> </mat-hint>\n  </mat-form-field>\n  <mat-form-field class=\"\">\n    <mat-label>Password</mat-label>\n    <input matInput #password1 maxlength=\"256\" type = \"password\" placeholder=\"password\" formControlName=\"password\">\n    <mat-hint align=\"start\"><strong>a strong password</strong> </mat-hint>\n  </mat-form-field>\n\n</form>\n<!-- <button mat-button [mat-dialog-close]=  cdkFocusInitial>Ok</button> -->\n<button mat-button (click)=\"cancel()\">Cancel</button>\n<button mat-button (click)=\"save()\">Login</button>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { AuthenticationService } from './authentication.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PurchaseService {\n\n  constructor(private http: HttpClient, private auth: AuthenticationService) { }\n\n  purchase(amount) {\n    let csrf = this.auth.getCookie('csrftoken')\n\n    let csrfheader = new HttpHeaders({ 'X-CSRFToken': csrf })\n    console.log(this.auth.getHost() + \"tree/buy/\")\n    this.http.post(this.auth.getHost() + \"tree/buy/\", { \"amount\": amount}, { headers: csrfheader })\n      .subscribe(() => {})\n  }\n\n  reset(){\n    this.http.get(this.auth.getHost() + \"delete\")\n    .subscribe(() => {\n      //nothing to do here\n    })\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { PurchaseService } from '../purchase.service';\n@Component({\n  selector: 'app-purchase',\n  templateUrl: './purchase.component.html',\n  styleUrls: ['./purchase.component.css']\n})\nexport class PurchaseComponent implements OnInit {\n\n  constructor(\n    private dialogRef: MatDialogRef<PurchaseComponent>,\n    public purchase: PurchaseService,\n    ) { }\n\n  ngOnInit(): void {\n  }\n  save(amount) {\n    this.purchase.purchase(amount)\n\n    this.dialogRef.close();\n  }\n\n}\n","  <form class=\"example-form\">\n    <mat-form-field class=\"example-full-width\">\n      <mat-label>Amount</mat-label>\n      <input matInput #message maxlength=\"256\" type=\"number\" placeholder=\"999\">\n      <mat-hint align=\"start\"><strong>Numbers only</strong> </mat-hint>\n      <mat-hint align=\"end\"> max 5000</mat-hint>\n    </mat-form-field>\n  </form>\n  <button (click)=\"save(message.value)\" [disabled]=\"false\" mat-raised-button>Buy</button>\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../authentication.service';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { FormGroup, FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  constructor(\n    private auth: AuthenticationService,\n\n\n    private dialogRef: MatDialogRef<RegisterComponent>,\n  ) { }\n\n  profileForm = new FormGroup({\n    username: new FormControl(''),\n    password: new FormControl(''),\n    password2: new FormControl(''),\n  })\n  save() {\n    this.auth.register(\n      this.profileForm.controls.username.value,\n      this.profileForm.controls.password.value)\n\n    this.dialogRef.close(this.profileForm.value);\n  }\n\n  cancel(){\n    this.dialogRef.close()\n  }\n  ngOnInit(): void {\n  }\n\n}\n","\n<h1 mat-dialog-title>Register form</h1>\n<form [formGroup]=\"profileForm\">\n  <mat-form-field class=\"\">\n    <mat-label>User name</mat-label>\n    <input matInput #username maxlength=\"256\" type = \"string\" placeholder=\"some_name\"  formControlName=\"username\">\n    <mat-hint align=\"start\"><strong>Any name</strong> </mat-hint>\n  </mat-form-field>\n  <mat-form-field class=\"\">\n    <mat-label>Password</mat-label>\n    <input matInput #password1 maxlength=\"256\" type = \"password\" placeholder=\"password\" formControlName=\"password\">\n    <mat-hint align=\"start\"><strong>a strong password</strong> </mat-hint>\n  </mat-form-field>\n\n  <mat-form-field class=\"\">\n    <mat-label>Password</mat-label>\n    <input matInput #password1 maxlength=\"256\" type = \"password\" placeholder=\"password\" formControlName=\"password2\">\n    <mat-hint align=\"start\"><strong>Repeat password</strong> </mat-hint>\n  </mat-form-field>\n\n</form>\n<!-- <button mat-button [mat-dialog-close]=  cdkFocusInitial>Ok</button> -->\n<button mat-button (click)=\"cancel()\">Cancel</button>\n<button mat-button (click)=\"save()\">Register</button>\n","import { Directive, Input, Renderer2, ElementRef, OnInit } from '@angular/core';\n\n@Directive({\n  selector: '[appTreeDirective]'\n})\nexport class TreeDirectiveDirective implements OnInit {\n@Input() treeData:any;\n  constructor(private renderer: Renderer2, private elementRef: ElementRef) { }\nngOnInit(): void{\n  const div = this.renderer.createElement('div');\n  //const text = this.renderer.createText('Hello world!');\nthis.renderer.setAttribute(div, \"innerHtml\",\"<p> hehe </p>\")\n  //this.renderer.appendChild(div, text);\n  this.renderer.appendChild(this.elementRef.nativeElement, div)\n}\n}\n","import { Injectable } from '@angular/core';\nimport { User } from './user';\nimport { Node } from './node';\ndeclare const d3:any;\n@Injectable({\n  providedIn: 'root'\n})\nexport class TreeGeneratorService {\n\n  constructor() { }\n\n  public generateTree(users:User[], data:Node[], width, height):any{\n    //add the group element that will contain all the drawings of the graph\n    //graph = svg.append('g').attr('transform', 'translate(50, 50)');\n    users = users.sort((a,b) => a.username.localeCompare(b.username))\n    console.log(users, \"users \")\n    var graph = d3.create('svg:g');\n    var scale;\n    scale = d3.scaleOrdinal(d3[\"schemeSet3\"])\n      .domain(users.map((element) => element.username))\n\n    graph.selectAll('.node').remove();\n    graph.selectAll('.link').remove();\n    data.sort((a, b) => a.number - b.number)\n    data.sort((a, b) => a.number % 2 == 1 ? a.number - b.number : b.number - a.number)\n    console.log(data, \"data before stratify\")\n    // stratify the data\n    var rootNode = d3.stratify()\n      .id(function (d) {\n        return d.number\n      })\n      .parentId(function (d) {\n        return d.parent;\n      })\n      (data)\n    //stratified data -> tree form data\n    var treeData = d3.tree().size([width * 0.97, height*0.75])(rootNode)\n    //create the selection of nodes from the tree data descendants\n    var nodes = graph.selectAll('.node')\n      .data(treeData.descendants())\n\n    // save the links data from the stratified data\n    var links = graph.selectAll('.link').data(rootNode.links())\n\n    // draw the links as path elements\n    links.enter().append('path')\n      .attr('stroke', 'blue')\n      .attr('d', d3.linkVertical()\n        .x(function (d) { return d.x; })\n        .y(function (d) { return d.y; }))\n      .attr('class', 'link')\n      .attr('fill', 'none')\n      .attr('stroke', d => d.target.data.hasOwnProperty('userName') ? scale(d.source.data.userName) : 'gray')////#aaa\n      .attr('stroke-width', 2)\n\n    // add a group for each node with the specified coordinates\n    var enterNodes = nodes.enter().append('g')\n      .attr('transform', (d, i, n) => {\n        //rotates the tree\n        let x = d.x\n        let y = d.y\n        return `translate(${x},${y})`\n      })\n      .attr('class', \"node\")\n\n    // draw rectangles in each node group\n    var rectangles = enterNodes.append('rect')\n      .attr('fill', d => d.data.userName != null ? scale(d.data.userName) : 'gray')\n      .attr('stroke', 'black')\n      .attr('width', 30)//30\n      .attr('height', 30)\n      .attr('transform', d => `translate(${-5}, ${-10})`).raise();\n    // add a click event on each rectangle\n    enterNodes.on(\"click\", (d) => {\n      console.log(d)\n    })\n    enterNodes.on(\"mouseenter\", (d) => {\n      console.log(d)\n    })\n    // add text to each of the node groups\n    enterNodes.append('text')\n      .text((d) => { return d.data.number })\n      .attr('fill', d => d.data.childrenMissing > 0 ? 'black' : \"red\")\n      .attr('transform', d => `translate(${2}, ${10})`);\n\n    var colorLegend = d3.legendColor()\n      .shape(\"path\", d3.symbol().type(d3.symbolTriangle).size(150)())\n      .shapePadding(10)\n      //use cellFilter to hide the \"e\" cell\n      .cellFilter(function (d) { return d.label !== \"e\" })\n      .scale(scale)\n\n    graph.append(\"g\")\n      .attr(\"class\", \"userLegend\")\n    graph.select(\".userLegend\").call(colorLegend)\n\n    return graph\n  }\n}\n","import { Component, OnInit, AfterViewInit, AfterContentInit, Input } from '@angular/core';\nimport { AuthenticationService } from '../authentication.service';\nimport { User } from '../user';\nimport { Node } from '../node';\nimport { TreeGeneratorService } from '../tree-generator.service';\ndeclare const ReconnectingWebSocket: any;\ndeclare const d3: any;\n\n\n@Component({\n  selector: 'app-tree',\n  templateUrl: './tree.component.html',\n  styleUrls: ['./tree.component.css']\n})\nexport class TreeComponent implements OnInit, AfterViewInit {\n\n  constructor(\n    public auth: AuthenticationService,\n    public tree_service: TreeGeneratorService) { }\n  //public data: any[]\n  public users: User[]\n  update: void;\n  name: string;\n  @Input() data: Node[];\n  @Input() index:number;\n\n  ngOnInit(): void {\n    console.log(this.data, \" its the mofoking data\")\n    this.auth.userList.subscribe(dataResponse => {\n\n      this.users = dataResponse\n\n\n      console.log(this.users, \"this is the users data form subscription\")\n    })\n    this.name = this.data.length.toString()\n\n  }\n  ngAfterViewInit(): void {\n\n    /* setTimeout(() => {\n      var dims = { height: 1400, width: 800 };\n      var svg = d3.selectAll(\".canvas\")\n        .append('svg')\n        .attr('width', dims.width + 100)\n        .attr('height', dims.height + 100);\n      var graph = this.tree_service.generateTree(this.users,this.data);\n      console.log(graph.node(), \" nodes\")\n      svg.append(()=>graph.node())\n      svg.append(()=>graph.node())\n    }, 0); */\n\n  }\n\n}\n//setTimeout(() => {\n/*   var graph\n    var svg\n    const dims = { height: 1400, width: 800 };\n    svg = d3.selectAll(\".canvas\")\n      .append('svg')\n      .attr('width', dims.width + 100)\n      .attr('height', dims.height + 100);\n    //add the group element that will contain all the drawings of the graph\n\n    //graph = svg.append('g').attr('transform', 'translate(50, 50)');\n    var graph = d3.create('svg:g');\n    var scale;\n    scale = d3.scaleOrdinal(d3[\"schemeSet3\"])\n      .domain(this.users.map((element) => element.username))\n\n    graph.selectAll('.node').remove();\n    graph.selectAll('.link').remove();\n    this.data.sort((a, b) => a.number - b.number)\n    this.data.sort((a, b) => a.number % 2 == 1 ? a.number - b.number : b.number - a.number)\n    console.log(this.data, \"data before stratify\")\n    // stratify the data\n    var rootNode = d3.stratify()\n      .id(function (d) {\n        return d.number\n      })\n      .parentId(function (d) {\n        return d.parent;\n      })\n      (this.data)\n    //stratified data -> tree form data\n    var treeData = d3.tree().size([1400, 800])(rootNode)\n    //create the selection of nodes from the tree data descendants\n    var nodes = graph.selectAll('.node')\n      .data(treeData.descendants())\n\n    // save the links data from the stratified data\n    var links = graph.selectAll('.link').data(rootNode.links())\n\n    // draw the links as path elements\n    links.enter().append('path')\n      .attr('stroke', 'blue')\n      .attr('d', d3.linkHorizontal()\n        .x(function (d) { return d.y; })\n        .y(function (d) { return d.x; }))\n      .attr('class', 'link')\n      .attr('fill', 'none')\n      .attr('stroke', d => d.target.data.hasOwnProperty('userName') ? scale(d.source.data.userName) : 'gray')////#aaa\n      .attr('stroke-width', 2)\n\n    // add a group for each node with the specified coordinates\n    var enterNodes = nodes.enter().append('g')\n      .attr('transform', (d, i, n) => {\n        //rotates the tree\n        let x = d.y\n        let y = d.x\n        return `translate(${x},${y})`\n      })\n      .attr('class', \"node\")\n\n    // draw rectangles in each node group\n    var rectangles = enterNodes.append('rect')\n      .attr('fill', d => d.data.userName != null ? scale(d.data.userName) : 'gray')\n      .attr('stroke', 'black')\n      .attr('width', 30)//30\n      .attr('height', 30)\n      .attr('transform', d => `translate(${-5}, ${-10})`).raise();\n    // add a click event on each rectangle\n    enterNodes.on(\"click\", (d) => {\n      console.log(d)\n    })\n    enterNodes.on(\"mouseenter\", (d) => {\n      console.log(d)\n    })\n    // add text to each of the node groups\n    enterNodes.append('text')\n      .text((d) => { return d.data.number })\n      .attr('fill', d => d.data.childrenMissing > 0 ? 'black' : \"red\")\n      .attr('transform', d => `translate(${2}, ${10})`);\n\n    var colorLegend = d3.legendColor()\n      .shape(\"path\", d3.symbol().type(d3.symbolTriangle).size(150)())\n      .shapePadding(10)\n      //use cellFilter to hide the \"e\" cell\n      .cellFilter(function (d) { return d.label !== \"e\" })\n      .scale(scale)\n\n    graph.append(\"g\")\n      .attr(\"class\", \"userLegend\")\n    graph.select(\".userLegend\").call(colorLegend) */\n\n//svg.append(()=>graph.node())\n//},0);\n\n  //}\n\n\n","\n<div class=\"container\" style=\"float:left; width: auto; height: auto\">\n\n  <div class =\"canvas\" style=\"border: solid black;\">\n\n  </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}