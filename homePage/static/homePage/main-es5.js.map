{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/authentication.service.ts","webpack:///src/app/data-reception.service.ts","webpack:///src/app/homepage/homepage.component.ts","webpack:///src/app/homepage/homepage.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/purchase.service.ts","webpack:///src/app/purchase/purchase.component.ts","webpack:///src/app/purchase/purchase.component.html","webpack:///src/app/register/register.component.ts","webpack:///src/app/register/register.component.html","webpack:///src/app/tree-directive.directive.ts","webpack:///src/app/tree-generator.service.ts","webpack:///src/app/tree/tree.component.ts","webpack:///src/app/tree/tree.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","AuthenticationService","http","user","userList","username","password","console","log","csrf","getCookie","csrfheader","getHost","post","subscribe","get_user","get","login","data","next","users","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","host","window","location","providedIn","DataReceptionService","auth","tree_data","task_data","ws_scheme","protocol","ws_path","socket","ReconnectingWebSocket","getSocketPath","dis","onmessage","event","JSON","parse","taskSocket","HomepageComponent","dialog","purchase","data_service","tree_service","color","mode","value","allTrees","index","tabs","selected","reload","pipe","forEach","tree","renderTree","dataSubscription","result","sort","a","b","dataResponse","tab","dims","height","width","d3","select","selectAll","remove","graph","generateTree","innerWidth","innerHeight","svg","append","attr","node","d","reset","dialogRef","open","afterClosed","regDialog","Dialog","logout","task","createConnection","unsubscribe","purchaseDialog","LoginComponent","profileForm","controls","close","cancel","save","PurchaseService","amount","headers","PurchaseComponent","RegisterComponent","password2","register","TreeDirectiveDirective","renderer","elementRef","div","createElement","setAttribute","appendChild","nativeElement","TreeGeneratorService","create","localeCompare","scale","scaleOrdinal","domain","map","element","number","even","filter","odd","concat","rootNode","stratify","parentId","parent","nodes","links","enter","linkVertical","x","y","target","hasOwnProperty","source","userName","enterNodes","n","rectangles","raise","on","text","childrenMissing","colorLegend","legendColor","shape","symbol","type","symbolTriangle","size","shapePadding","cellFilter","label","call","TreeComponent","toString","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'milosSite';\n\n\n\n\n}\n","<app-homepage></app-homepage>\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomepageComponent } from './homepage/homepage.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { TreeComponent } from './tree/tree.component';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport { LoginComponent } from './login/login.component';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RegisterComponent } from './register/register.component';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport { TreeDirectiveDirective } from './tree-directive.directive';\nimport { PurchaseComponent } from './purchase/purchase.component';\nimport {MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport {MatCardModule} from '@angular/material/card';\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomepageComponent,\n    TreeComponent,\n    LoginComponent,\n    RegisterComponent,\n    TreeDirectiveDirective,\n    PurchaseComponent,\n  ],\n\n  imports: [\n    MatTabsModule,\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatMenuModule,\n    MatIconModule,\n    MatDialogModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MatToolbarModule,\n    MatProgressSpinnerModule,\n    MatSidenavModule,\n    FontAwesomeModule,\n    MatCardModule\n  ],\n\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, throwError, BehaviorSubject, Subscription } from 'rxjs';\nimport { catchError, retry } from 'rxjs/operators';\n\n\nimport { User } from './user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\nmario:User\n\n\n  constructor(private http: HttpClient) { }\n\n  public user = new BehaviorSubject<User>(null)\n  public userList = new BehaviorSubject<User[]>([])\n\n  login(username, password) {\n    console.log(username, password , \" this form is not empty\")\n    let csrf = this.getCookie('csrftoken')\n    let csrfheader = new HttpHeaders({ 'X-CSRFToken': csrf })\n    console.log(this.getHost() + \"auth/login/\")\n    this.http.post(this.getHost() + \"auth/login/\", { \"username\": username, \"password\": password }).//, { headers: csrfheader }\n      subscribe(() => this.get_user())\n  }\n  logout() {\n\n    this.http.get(this.getHost() + \"auth/logout/\")\n      .subscribe(() => {\n        this.get_user();// this.refreshCart()\n\n      })\n  }\n\n\n  register(username, password) {\n\n    this.http.post(this.getHost() + \"auth/register/\", { \"username\": username, \"password\": password })\n\n      .subscribe(() => {\n        this.login(username, password);\n        this.get_user()\n      })\n  }\n\n  get_user() {\n    console.log(\"this is the address\" + this.getHost())\n\n    this.http.get(this.getHost() + \"auth/user/\").subscribe((data: any) => {\n      console.log(data, \"this is the data\")\n      if (data.username) {\n        this.user.next(data)\n        console.log(data.username)\n      }\n      else {\n        this.user.next(null)\n        console.log(\"we got null for the user back \")\n      }\n    })\n  }\n\n  get_users(): void {\n    let users: User[]\n    this.http.get<User[]>(this.getHost() + \"users/\").subscribe((data: User[])=>{\n      this.userList.next(data)\n    })\n  }\n\n  getCookie(name) {\n    var cookieValue = null;\n    if (document.cookie && document.cookie !== '') {\n      var cookies = document.cookie.split(';');\n      for (var i = 0; i < cookies.length; i++) {\n        var cookie = cookies[i].trim();\n        // Does this cookie string begin with the name we want?\n        if (cookie.substring(0, name.length + 1) === (name + '=')) {\n          cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n          break;\n        }\n      }\n    }\n    return cookieValue;\n  }\n\n  public getHost() {\n    var host = window.location.host\n    if (host == \"localhost:4200\" || host == \"127.0.0.1:8000\") {\n      return \"http://127.0.0.1:8000/\"\n    }\n    else {\n      return \"https://limitless-wildwood-61701.herokuapp.com/\"\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, throwError, BehaviorSubject, Subject, Subscription, } from 'rxjs';\nimport { Node } from './node';\nimport { AuthenticationService } from './authentication.service';\nimport { delay } from 'rxjs/operators';\ndeclare const ReconnectingWebSocket: any;\n@Injectable({\n  providedIn: 'root'\n})\n\n\n\n\n\nexport class DataReceptionService {\n  public tree_data = new Subject<Node[][]>()\n  public task_data = new BehaviorSubject<any>({})\n  constructor(private auth: AuthenticationService) { }\n\n  getSocketPath(): string{\n    var ws_scheme = window.location.protocol == \"https:\" ? \"wss\" : \"ws\";\n    var host = window.location.host;\n    if (host == \"localhost:4200\"){\n      host = \"127.0.0.1:8000\"\n    }\n    var ws_path = ws_scheme + '://' + host + \"/treeChannel/\"\n     /* var ws_path = \"ws://limitless-wildwood-61701.herokuapp.com/treeChannel/\" */\n    return ws_path\n  }\n\n  createConnection() {\n\n\n    var socket = new ReconnectingWebSocket(this.getSocketPath() + \"tree/\")\n    console.log(\"Connecting to \" + this.getSocketPath());\n    //let socket = new WebSocket(\"wss://limitless-wildwood-61701.herokuapp.com/treeChannel\");\n    let dis = this\n    socket.onmessage = (event) => {\n      this.tree_data.next(JSON.parse(event.data))\n\n      //update.apply(this)\n    };\n\n    var taskSocket = new ReconnectingWebSocket(this.getSocketPath() + \"task/\")\n    console.log(\"Connecting to \" + this.getSocketPath() + \"task/\");\n    //let socket = new WebSocket(\"wss://limitless-wildwood-61701.herokuapp.com/treeChannel\");\n\n    taskSocket.onmessage = (event) => {\n      this.task_data.next(JSON.parse(event.data))\n\n      //update.apply(this)\n    };\n\n  }\n}\n\n//ws://127.0.0.1:8000/treeChannel/task/\n","import { Component, OnInit, ViewChild, ElementRef, AfterViewInit, HostListener, OnDestroy } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { LoginComponent } from '../login/login.component';\r\nimport { AuthenticationService } from '../authentication.service';\r\nimport { User } from '../user';\r\nimport { RegisterComponent } from '../register/register.component';\r\nimport { PurchaseService } from '../purchase.service';\r\nimport { DataReceptionService } from '../data-reception.service';\r\nimport { Node } from '../node';\r\nimport { TreeGeneratorService } from '../tree-generator.service';\r\nimport { MDCTabBar } from '@material/tab-bar';\r\nimport { PurchaseComponent } from '../purchase/purchase.component';\r\nimport { Subject, BehaviorSubject, interval, Subscription } from 'rxjs';\r\nimport { debounce, skip, throttle, delay } from 'rxjs/operators';\r\nimport {ThemePalette} from '@angular/material/core';\r\nimport {ProgressSpinnerMode} from '@angular/material/progress-spinner';\r\n\r\n\r\ndeclare const d3: any;\r\n\r\n@Component({\r\n  selector: 'app-homepage',\r\n  templateUrl: './homepage.component.html',\r\n  styleUrls: ['./homepage.component.css']\r\n})\r\nexport class HomepageComponent implements OnInit, AfterViewInit, OnDestroy {\r\n  color: ThemePalette = 'primary';\r\n  mode: ProgressSpinnerMode = 'determinate';\r\n  value = 50;\r\n  allTrees: Node[][] = []\r\n  user: User;\r\n  users: User[]\r\n  index: number = 0\r\n  dataSubscription: Subscription\r\n\r\n  task: any;\r\n\r\n  public reload: Subject<any>\r\n  constructor(\r\n    public dialog: MatDialog,\r\n    public auth: AuthenticationService,\r\n    public purchase: PurchaseService,\r\n    public data_service: DataReceptionService,\r\n    public tree_service: TreeGeneratorService,\r\n\r\n\r\n  ) { }\r\n  @HostListener('window:resize', ['$event'])\r\n  dostuff() {\r\n        //this.allTrees.forEach((tree, index)=>this.renderTree(this.allTrees[index],index))\r\n        console.log(\"reload triggered by window size change\")\r\n        this.reload.next(\"oh yea\")\r\n      }\r\n\r\n/*\r\n//.pipe(\r\n  throttle(ev => interval(2000), { leading: true, trailing: true }),\r\n  ) */\r\n\r\n  ngOnInit(): void {\r\n\r\n\r\n    this.reload = new Subject()\r\n    //.pipe(debounce(() => interval(2000)))\r\n    this.reload.pipe(debounce(() => interval(500))).subscribe(() => {\r\n     // d3.selectAll(\".genericClass\").select(\"svg\").remove();\r\n        console.log(\"reload after debounce\")\r\n        this.allTrees.forEach((tree, index) => this.renderTree(tree, index))\r\n    })\r\n\r\n    this.dataSubscription = this.data_service.tree_data.subscribe((result) => {\r\n      this.allTrees = result.sort((a, b) => b.length - a.length)\r\n      if (result.length > 0) {\r\n        console.log(\"data arrived \")\r\n        this.reload.next(\"reload baby\")\r\n      }\r\n    })\r\n\r\n      //this.auth.user.next({username: \"cumLord\"})\r\n    this.auth.get_user();\r\n    this.auth.user.subscribe((result) => {\r\n      this.user = result\r\n    })\r\n    this.auth.userList.subscribe(dataResponse => {\r\n      this.users = dataResponse\r\n    })\r\n  }\r\n\r\n\r\n  tabs: any[] = [\r\n    {\r\n      selected: true,\r\n      name: \"First Tree\"\r\n    },\r\n    {\r\n      selected: false,\r\n      name: \"Second Tree\"\r\n    },\r\n    {\r\n      selected: false,\r\n      name: \"Third Tree\"\r\n    },\r\n    {\r\n      selected: false,\r\n      name: \"Fourth Tree\"\r\n    },\r\n    {\r\n      selected: false,\r\n      name: \"Fifth Tree\"\r\n    },\r\n  ]\r\n\r\n  selectTab(index) {\r\n    this.tabs.forEach(tab => tab.selected = false)\r\n    this.tabs[index].selected = true\r\n    //this.loading= false;\r\n  }\r\n  renderTree(data, index): void {\r\n\r\n    var dims = { height: 1000, width: 2000 };\r\n    d3.select(\"#canvas-\" + index).selectAll(\"*\").remove()\r\n    console.log(\"removed svg \")\r\n\r\n    //https://www.w3schools.com/jsref/dom_obj_all.asp\r\n    try{\r\n      var graph = this.tree_service.generateTree(this.users, data, window.innerWidth, window.innerHeight);\r\n      console.log(\"adding svg \")\r\n      var svg = d3.select(\"#canvas-\" + index).append(\"svg\")\r\n      .attr('width', window.innerWidth)\r\n      .attr('height', window.innerHeight * 0.80);\r\n\r\n  svg.append(() => graph.node()).attr('transform', d => `translate(${10}, ${15})`);\r\n    }\r\n\r\n    catch{\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n  delete() {\r\n    this.purchase.reset();\r\n\r\n  }\r\n\r\n  openDialog(): void {\r\n    const dialogRef = this.dialog.open(LoginComponent, {\r\n      width: '250px',\r\n      data: {}\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n    });\r\n  }\r\n\r\n\r\n  openRegDialog(): void {\r\n    const regDialog = this.dialog.open(RegisterComponent, {\r\n      width: '250px',\r\n      data: {}\r\n    })\r\n  }\r\n\r\n  purchaseDialog(): void {\r\n    let Dialog = this.dialog.open(PurchaseComponent, {\r\n      width: 'auto',\r\n      data: {}\r\n    })\r\n  }\r\n  logout(): void {\r\n    this.auth.logout()\r\n  }\r\n  nameFunction() {\r\n    return \"a name\"\r\n  }\r\n\r\n\r\n  ngAfterViewInit(): void {\r\n\r\n\r\n\r\n\r\n    this.data_service.task_data.subscribe((result) => {\r\n\r\n      this.task = result\r\n      //this.taskFraction = result.fraction * 100\r\n\r\n    })\r\n    this.data_service.createConnection()\r\n\r\n\r\n  }\r\nngOnDestroy():void{\r\n  this.dataSubscription.unsubscribe()\r\n}\r\n\r\n}\r\n","<mat-toolbar>\n  <div *ngIf=\"!user; else elseBlock\">\n    <button mat-raised-button color=\"warn\" [matMenuTriggerFor]=\"aboveMenu\">Hello stranger</button>\n    <mat-menu #aboveMenu=\"matMenu\" yPosition=\"above\">\n      <button (click)=\"openDialog()\" mat-menu-item>Log in</button>\n      <button (click)=\"openRegDialog()\" mat-menu-item>Register</button>\n    </mat-menu>\n  </div>\n\n  <ng-template #elseBlock>\n    <div>\n      <button mat-stroked-button [matMenuTriggerFor]=\"aboveMenu\">Hello {{user.username}}</button>\n      <mat-menu #aboveMenu=\"matMenu\" yPosition=\"above\">\n        <button (click)=\"logout()\" mat-menu-item>Logout</button>\n        <button mat-menu-item>Profile</button>\n      </mat-menu>\n    </div>\n  </ng-template>\n\n  <button (click)=\"purchaseDialog()\" style=\"margin: 10px;\" color=\"basic\" mat-raised-button color=\"\">Shop</button>\n\n  <mat-progress-spinner   class=\"progressClass\" [diameter]=\"46\"\n    [value]=\"task?.fraction ? task.fraction * 100: 0\">\n  </mat-progress-spinner>\n\n  <p style =\" text-align: center; margin-left: auto;\n  margin-right: auto;\"> {{task?.text}}</p>\n\n\n\n\n\n  <button mat-mini-fab color=\"basic\" aria-label=\"Example icon button with a delete icon\" style=\"  margin-left: auto; \"\n    (click)=\"delete()\">\n    <mat-icon>delete</mat-icon>\n  </button>\n</mat-toolbar>\n\n<div class=\"tab_bar\">\n  <button *ngFor=\"let tree of allTrees; index as i\" class=\"tab_item\" [class.tab_item_selected]=\"tabs[i].selected\"\n    (click)=selectTab(i) mat-raised-button color=\"\">{{tabs[i].name}}</button>\n</div>\n\n<div *ngFor=\"let tree of allTrees; index as i\" class=\"\" [class.selected]=\"tabs[i].selected\"\n  [class.content]=\"!tabs[i].selected\">\n  <div class=\"genericClass\" [attr.id]=\"'canvas-' + i\"></div>\n</div>\n\n\n<!--\n<div class=\"fa-9x loaderHolder\" [class.hidden]=\"!loading\" [class.loaderHolder]=\"loading\">\n  <i class=\"fas fa-cog fa-spin\" style=\"margin:auto\"></i>\n</div>\n -->\n","import { Component, OnInit } from '@angular/core';\n//import { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material\";\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { AuthenticationService } from '../authentication.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  form: FormGroup;\n  //public profileForm: FormGroup;\n\n  profileForm = new FormGroup({\n    username: new FormControl(''),\n    password: new FormControl(''),\n  })\n  constructor(\n    private auth: AuthenticationService,\n    private dialogRef: MatDialogRef<LoginComponent>,\n  ) {}\n\n  ngOnInit(): void {\n\n\n  }\n\n\n\n  save() {\n    this.auth.login(\n      this.profileForm.controls.username.value,\n      this.profileForm.controls.password.value)\n\n    this.dialogRef.close(this.profileForm.value);\n  }\n\n  cancel(){\n    this.dialogRef.close()\n  }\n}\n","<p>login works!</p>\n<h1 mat-dialog-title>Login form</h1>\n<form [formGroup]=\"profileForm\">\n  <mat-form-field class=\"\">\n    <mat-label>User name</mat-label>\n    <input matInput #username maxlength=\"256\" type = \"string\" placeholder=\"password\"  formControlName=\"username\">\n    <mat-hint align=\"start\"><strong>Any name</strong> </mat-hint>\n  </mat-form-field>\n  <mat-form-field class=\"\">\n    <mat-label>Password</mat-label>\n    <input matInput #password1 maxlength=\"256\" type = \"password\" placeholder=\"password\" formControlName=\"password\">\n    <mat-hint align=\"start\"><strong>a strong password</strong> </mat-hint>\n  </mat-form-field>\n\n</form>\n<!-- <button mat-button [mat-dialog-close]=  cdkFocusInitial>Ok</button> -->\n<button mat-button (click)=\"cancel()\">Cancel</button>\n<button mat-button (click)=\"save()\">Login</button>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { AuthenticationService } from './authentication.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PurchaseService {\n\n  constructor(private http: HttpClient, private auth: AuthenticationService) { }\n\n  purchase(amount) {\n    let csrf = this.auth.getCookie('csrftoken')\n    csrf = csrf == null? \"something\":csrf;\n\n    let csrfheader = new HttpHeaders({ 'X-CSRFToken': csrf })\n    console.log(this.auth.getHost() + \"tree/buy/\")\n    this.http.post(this.auth.getHost() + \"tree/buy/\", { \"amount\": amount}, { headers: csrfheader })\n      .subscribe(() => {})\n  }\n\n  reset(){\n    this.http.get(this.auth.getHost() + \"delete\")\n    .subscribe(() => {\n      //nothing to do here\n    })\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { PurchaseService } from '../purchase.service';\n@Component({\n  selector: 'app-purchase',\n  templateUrl: './purchase.component.html',\n  styleUrls: ['./purchase.component.css']\n})\nexport class PurchaseComponent implements OnInit {\n\n  constructor(\n    private dialogRef: MatDialogRef<PurchaseComponent>,\n    public purchase: PurchaseService,\n    ) { }\n\n  ngOnInit(): void {\n  }\n  save(amount) {\n    this.purchase.purchase(amount)\n\n    this.dialogRef.close();\n  }\n\n}\n","  <form class=\"example-form\">\n    <mat-form-field class=\"example-full-width\">\n      <mat-label>Amount</mat-label>\n      <input matInput #message maxlength=\"256\" type=\"number\" placeholder=\"999\">\n      <mat-hint align=\"start\"><strong>Numbers only</strong> </mat-hint>\n      <mat-hint align=\"end\"> max 5000</mat-hint>\n    </mat-form-field>\n  </form>\n  <button (click)=\"save(message.value)\" [disabled]=\"false\" mat-raised-button>Buy</button>\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../authentication.service';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { FormGroup, FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  constructor(\n    private auth: AuthenticationService,\n\n\n    private dialogRef: MatDialogRef<RegisterComponent>,\n  ) { }\n\n  profileForm = new FormGroup({\n    username: new FormControl(''),\n    password: new FormControl(''),\n    password2: new FormControl(''),\n  })\n  save() {\n    this.auth.register(\n      this.profileForm.controls.username.value,\n      this.profileForm.controls.password.value)\n\n    this.dialogRef.close(this.profileForm.value);\n  }\n\n  cancel(){\n    this.dialogRef.close()\n  }\n  ngOnInit(): void {\n  }\n\n}\n","\n<h1 mat-dialog-title>Register form</h1>\n<form [formGroup]=\"profileForm\">\n  <mat-form-field class=\"\">\n    <mat-label>User name</mat-label>\n    <input matInput #username maxlength=\"256\" type = \"string\" placeholder=\"some_name\"  formControlName=\"username\">\n    <mat-hint align=\"start\"><strong>Any name</strong> </mat-hint>\n  </mat-form-field>\n  <mat-form-field class=\"\">\n    <mat-label>Password</mat-label>\n    <input matInput #password1 maxlength=\"256\" type = \"password\" placeholder=\"password\" formControlName=\"password\">\n    <mat-hint align=\"start\"><strong>a strong password</strong> </mat-hint>\n  </mat-form-field>\n\n  <mat-form-field class=\"\">\n    <mat-label>Password</mat-label>\n    <input matInput #password1 maxlength=\"256\" type = \"password\" placeholder=\"password\" formControlName=\"password2\">\n    <mat-hint align=\"start\"><strong>Repeat password</strong> </mat-hint>\n  </mat-form-field>\n\n</form>\n<!-- <button mat-button [mat-dialog-close]=  cdkFocusInitial>Ok</button> -->\n<button mat-button (click)=\"cancel()\">Cancel</button>\n<button mat-button (click)=\"save()\">Register</button>\n","import { Directive, Input, Renderer2, ElementRef, OnInit } from '@angular/core';\n\n@Directive({\n  selector: '[appTreeDirective]'\n})\nexport class TreeDirectiveDirective implements OnInit {\n@Input() treeData:any;\n  constructor(private renderer: Renderer2, private elementRef: ElementRef) { }\nngOnInit(): void{\n  const div = this.renderer.createElement('div');\n  //const text = this.renderer.createText('Hello world!');\nthis.renderer.setAttribute(div, \"innerHtml\",\"<p> hehe </p>\")\n  //this.renderer.appendChild(div, text);\n  this.renderer.appendChild(this.elementRef.nativeElement, div)\n}\n}\n","import { Injectable } from '@angular/core';\r\nimport { User } from './user';\r\nimport { Node } from './node';\r\n declare const d3:any;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TreeGeneratorService {\r\n\r\n  constructor() { }\r\n\r\n  public generateTree(users:User[], data:Node[], width, height):any{\r\n    d3.create\r\n    var height:any = height - 200\r\n    //add the group element that will contain all the drawings of the graph\r\n    //graph = svg.append('g').attr('transform', 'translate(50, 50)');\r\n    users = users.sort((a,b) => a.username.localeCompare(b.username))\r\n    console.log(users, \"users \")\r\n    var graph = d3.create('svg:g');\r\n    var scale;\r\n    scale = d3.scaleOrdinal(d3[\"schemeSet3\"])\r\n      .domain(users.map((element) => element.username))\r\n\r\n    graph.selectAll('.node').remove();\r\n    graph.selectAll('.link').remove();\r\n\r\n\r\n    data.sort((a, b) => a.number - b.number)\r\n\r\n    let even = data.filter((a)=>a.number%2 == 0).sort((a,b)=>b.number - a .number)\r\n    let odd = data.filter((a)=>a.number%2 == 1).sort((a,b)=>a.number - b .number)\r\n\r\n    data = even.concat(odd)\r\n\r\n/*\r\n    data.sort((a, b) => a.number % 2 == 0 ?  b.number - a.number:0)\r\n\r\n    data.sort((a, b) => a.number % 2 == 1 ? a.number - b.number:0)\r\n */\r\n\r\n\r\n\r\n    console.log(data, \" data that is not sorted\")\r\n    // this is broken !! sort on the serverside\r\n    // stratify the data\r\n    var rootNode = d3.stratify()\r\n      .id(function (d:any) {\r\n        return d.number\r\n      })\r\n      .parentId(function (d:any) {\r\n        return d.parent;\r\n      })\r\n      (data)\r\n    //stratified data -> tree form data\r\n\r\n    //var treeData = d3.tree().size([width * 0.97, height*0.75])(rootNode)\r\n\r\n    //create the selection of nodes from the tree data descendants\r\n/*\r\n    var nodes = graph.selectAll('.node')\r\n      .data(treeData.descendants())\r\n */\r\nvar nodes = graph.selectAll('.node')\r\n.data(data)\r\n\r\n/*\r\nvar nodes2 = graph.selectAll('.node')\r\n.data(treeData.descendants())\r\n */\r\n\r\n    // save the links data from the stratified data\r\n    var links = graph.selectAll('.link').data(rootNode.links())\r\n\r\n    // draw the links as path elements\r\n    links.enter().append('path')\r\n      .attr('stroke', 'blue')\r\n      .attr('d', d3.linkVertical()\r\n        .x(function (d) { return d.data.x * width})\r\n        .y(function (d) { return d.data.y * height }))\r\n      .attr('class', 'link')\r\n      .attr('fill', 'none')\r\n      .attr('stroke', d => d.target.data.hasOwnProperty('userName') ? scale(d.source.data.userName) : 'gray')////#aaa\r\n      .attr('stroke-width', 2)\r\n\r\n    // add a group for each node with the specified coordinates\r\n    var enterNodes = nodes.enter().append('g')\r\n      .attr('transform', (d, i, n) => {\r\n        //rotates the tree\r\n        let x = d.x *width\r\n        let y = d.y * height\r\n        return `translate(${x},${y})`\r\n      })\r\n      .attr('class', \"node\")\r\n\r\n    // draw rectangles in each node group\r\n    var rectangles = enterNodes.append('rect')\r\n      .attr('fill', d => d.userName != null ? scale(d.userName) : 'gray')\r\n      .attr('stroke', 'black')\r\n      .attr('width', 30)//30\r\n      .attr('height', 30)\r\n      .attr('transform', d => `translate(${-5}, ${-10})`).raise();\r\n    // add a click event on each rectangle\r\n    enterNodes.on(\"click\", (d) => {\r\n      console.log(d)\r\n    })\r\n    enterNodes.on(\"mouseenter\", (d) => {\r\n\r\n    })\r\n    // add text to each of the node groups\r\n    enterNodes.append('text')\r\n      .text((d) => { return d.number })\r\n      .attr('fill', d => d.childrenMissing > 0 ? 'black' : \"red\")\r\n      .attr('transform', d => `translate(${2}, ${10})`);\r\n\r\n    var colorLegend = d3.legendColor()\r\n      .shape(\"path\", d3.symbol().type(d3.symbolTriangle).size(150)())\r\n      .shapePadding(10)\r\n      //use cellFilter to hide the \"e\" cell\r\n      .cellFilter(function (d) { return d.label !== \"e\" })\r\n      .scale(scale)\r\n\r\n    graph.append(\"g\")\r\n      .attr(\"class\", \"userLegend\")\r\n    graph.select(\".userLegend\").call(colorLegend)\r\n\r\n    return graph\r\n  }\r\n}\r\n","import { Component, OnInit, AfterViewInit, AfterContentInit, Input } from '@angular/core';\r\nimport { AuthenticationService } from '../authentication.service';\r\nimport { User } from '../user';\r\nimport { Node } from '../node';\r\nimport { TreeGeneratorService } from '../tree-generator.service';\r\ndeclare const ReconnectingWebSocket: any;\r\ndeclare const d3: any;\r\n\r\n\r\n@Component({\r\n  selector: 'app-tree',\r\n  templateUrl: './tree.component.html',\r\n  styleUrls: ['./tree.component.css']\r\n})\r\nexport class TreeComponent implements OnInit, AfterViewInit {\r\n\r\n  constructor(\r\n    public auth: AuthenticationService,\r\n    public tree_service: TreeGeneratorService) { }\r\n  //public data: any[]\r\n  public users: User[]\r\n  update: void;\r\n  name: string;\r\n  @Input() data: Node[];\r\n  @Input() index:number;\r\n\r\n  ngOnInit(): void {\r\n    console.log(this.data, \" its the mofoking data\")\r\n    this.auth.userList.subscribe(dataResponse => {\r\n\r\n      this.users = dataResponse\r\n\r\n\r\n      console.log(this.users, \"this is the users data form subscription\")\r\n    })\r\n    this.name = this.data.length.toString()\r\n\r\n  }\r\n  ngAfterViewInit(): void {\r\n\r\n    /* setTimeout(() => {\r\n      var dims = { height: 1400, width: 800 };\r\n      var svg = d3.selectAll(\".canvas\")\r\n        .append('svg')\r\n        .attr('width', dims.width + 100)\r\n        .attr('height', dims.height + 100);\r\n      var graph = this.tree_service.generateTree(this.users,this.data);\r\n      console.log(graph.node(), \" nodes\")\r\n      svg.append(()=>graph.node())\r\n      svg.append(()=>graph.node())\r\n    }, 0); */\r\n\r\n  }\r\n\r\n}\r\n//setTimeout(() => {\r\n/*   var graph\r\n    var svg\r\n    const dims = { height: 1400, width: 800 };\r\n    svg = d3.selectAll(\".canvas\")\r\n      .append('svg')\r\n      .attr('width', dims.width + 100)\r\n      .attr('height', dims.height + 100);\r\n    //add the group element that will contain all the drawings of the graph\r\n\r\n    //graph = svg.append('g').attr('transform', 'translate(50, 50)');\r\n    var graph = d3.create('svg:g');\r\n    var scale;\r\n    scale = d3.scaleOrdinal(d3[\"schemeSet3\"])\r\n      .domain(this.users.map((element) => element.username))\r\n\r\n    graph.selectAll('.node').remove();\r\n    graph.selectAll('.link').remove();\r\n    this.data.sort((a, b) => a.number - b.number)\r\n    this.data.sort((a, b) => a.number % 2 == 1 ? a.number - b.number : b.number - a.number)\r\n    console.log(this.data, \"data before stratify\")\r\n    // stratify the data\r\n    var rootNode = d3.stratify()\r\n      .id(function (d) {\r\n        return d.number\r\n      })\r\n      .parentId(function (d) {\r\n        return d.parent;\r\n      })\r\n      (this.data)\r\n    //stratified data -> tree form data\r\n    var treeData = d3.tree().size([1400, 800])(rootNode)\r\n    //create the selection of nodes from the tree data descendants\r\n    var nodes = graph.selectAll('.node')\r\n      .data(treeData.descendants())\r\n\r\n    // save the links data from the stratified data\r\n    var links = graph.selectAll('.link').data(rootNode.links())\r\n\r\n    // draw the links as path elements\r\n    links.enter().append('path')\r\n      .attr('stroke', 'blue')\r\n      .attr('d', d3.linkHorizontal()\r\n        .x(function (d) { return d.y; })\r\n        .y(function (d) { return d.x; }))\r\n      .attr('class', 'link')\r\n      .attr('fill', 'none')\r\n      .attr('stroke', d => d.target.data.hasOwnProperty('userName') ? scale(d.source.data.userName) : 'gray')////#aaa\r\n      .attr('stroke-width', 2)\r\n\r\n    // add a group for each node with the specified coordinates\r\n    var enterNodes = nodes.enter().append('g')\r\n      .attr('transform', (d, i, n) => {\r\n        //rotates the tree\r\n        let x = d.y\r\n        let y = d.x\r\n        return `translate(${x},${y})`\r\n      })\r\n      .attr('class', \"node\")\r\n\r\n    // draw rectangles in each node group\r\n    var rectangles = enterNodes.append('rect')\r\n      .attr('fill', d => d.data.userName != null ? scale(d.data.userName) : 'gray')\r\n      .attr('stroke', 'black')\r\n      .attr('width', 30)//30\r\n      .attr('height', 30)\r\n      .attr('transform', d => `translate(${-5}, ${-10})`).raise();\r\n    // add a click event on each rectangle\r\n    enterNodes.on(\"click\", (d) => {\r\n      console.log(d)\r\n    })\r\n    enterNodes.on(\"mouseenter\", (d) => {\r\n      console.log(d)\r\n    })\r\n    // add text to each of the node groups\r\n    enterNodes.append('text')\r\n      .text((d) => { return d.data.number })\r\n      .attr('fill', d => d.data.childrenMissing > 0 ? 'black' : \"red\")\r\n      .attr('transform', d => `translate(${2}, ${10})`);\r\n\r\n    var colorLegend = d3.legendColor()\r\n      .shape(\"path\", d3.symbol().type(d3.symbolTriangle).size(150)())\r\n      .shapePadding(10)\r\n      //use cellFilter to hide the \"e\" cell\r\n      .cellFilter(function (d) { return d.label !== \"e\" })\r\n      .scale(scale)\r\n\r\n    graph.append(\"g\")\r\n      .attr(\"class\", \"userLegend\")\r\n    graph.select(\".userLegend\").call(colorLegend) */\r\n\r\n//svg.append(()=>graph.node())\r\n//},0);\r\n\r\n  //}\r\n\r\n\r\n","\n<div class=\"container\" style=\"float:left; width: auto; height: auto\">\n\n  <div class =\"canvas\" style=\"border: solid black;\">\n\n  </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}