{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/authentication.service.ts","webpack:///src/app/homepage/homepage.component.ts","webpack:///src/app/homepage/homepage.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/register/register.component.ts","webpack:///src/app/register/register.component.html","webpack:///src/app/tree/tree.component.ts","webpack:///src/app/tree/tree.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","AuthenticationService","http","user","username","password","csrf","getCookie","csrfheader","console","log","getHost","post","headers","subscribe","get_user","get","alert","login","data","next","users","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","host","window","location","providedIn","HomepageComponent","dialog","auth","dialogRef","open","width","afterClosed","result","regDialog","logout","LoginComponent","profileForm","controls","value","close","cancel","save","RegisterComponent","password2","register","TreeComponent","update","svg","d3","select","append","attr","dims","height","graph","scale","scaleOrdinal","domain","map","element","selectAll","remove","sort","a","b","number","rootNode","stratify","d","parentId","parent","treeData","tree","size","nodes","descendants","links","enter","linkHorizontal","x","y","target","hasOwnProperty","source","userName","enterNodes","n","rectangles","raise","on","text","childrenMissing","colorLegend","legendColor","shape","symbol","type","symbolTriangle","shapePadding","cellFilter","label","call","get_users","dataResponse","ws_scheme","protocol","ws_path","socket","ReconnectingWebSocket","dis","onmessage","event","JSON","parse","apply","local","production","mario","environment","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'milosSite';\n\n\n\n\n}\n","<app-homepage></app-homepage>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomepageComponent } from './homepage/homepage.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { TreeComponent } from './tree/tree.component';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport { LoginComponent } from './login/login.component';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RegisterComponent } from './register/register.component';\nimport {MatToolbarModule} from '@angular/material/toolbar';\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomepageComponent,\n    TreeComponent,\n    LoginComponent,\n    RegisterComponent,\n\n  ],\n  imports: [\n    MatTabsModule,\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatMenuModule,\n    MatIconModule,\n    MatDialogModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MatToolbarModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, throwError, BehaviorSubject, Subscription } from 'rxjs';\nimport { catchError, retry } from 'rxjs/operators';\n\n\nimport { User } from './user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\nmario:User\n\n\n  constructor(private http: HttpClient) { }\n\n  public user = new BehaviorSubject<User>(null)\n\n  login(username, password) {\n    let csrf = this.getCookie('csrftoken')\n    let csrfheader = new HttpHeaders({ 'X-CSRFToken': csrf })\n    console.log(this.getHost() + \"auth/login/\")\n    this.http.post(this.getHost() + \"auth/login/\", { \"username\": username, \"password\": password }, { headers: csrfheader }).\n      subscribe(() => this.get_user())\n  }\n  logout() {\n\n    this.http.get(this.getHost() + \"auth/logout/\")\n      .subscribe(() => {\n        this.get_user();// this.refreshCart()\n        alert(\"logged out\")\n      })\n  }\n\n\n  register(username, password) {\n    this.http.post(this.getHost() + \"auth/register/\", { \"username\": username, \"password\": password })\n      .subscribe(() => {\n        this.login(username, password);\n        this.get_user()\n      })\n  }\n\n  get_user() {\n    console.log(\"this is the address\" + this.getHost())\n\n    this.http.get(this.getHost() + \"auth/user/\").subscribe((data: any) => {\n      console.log(data, \"this is the data\")\n      if (data.username) {\n        this.user.next(data)\n        console.log(data.username)\n      }\n      else {\n        this.user.next(null)\n      }\n    })\n  }\n\n  get_users(): Observable<User[]> {\n    let users: User[]\n    return this.http.get<User[]>(this.getHost() + \"users/\")\n  }\n\n  getCookie(name) {\n    var cookieValue = null;\n    if (document.cookie && document.cookie !== '') {\n      var cookies = document.cookie.split(';');\n      for (var i = 0; i < cookies.length; i++) {\n        var cookie = cookies[i].trim();\n        // Does this cookie string begin with the name we want?\n        if (cookie.substring(0, name.length + 1) === (name + '=')) {\n          cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n          break;\n        }\n      }\n    }\n    return cookieValue;\n  }\n\n  public getHost() {\n    var host = window.location.host\n    if (host == \"localhost:4200\" || host == \"127.0.0.1:8000\") {\n      return \"http://127.0.0.1:8000/\"\n    }\n    else {\n      return \"https://limitless-wildwood-61701.herokuapp.com/\"\n    }\n  }\n\n}\n","import { Component, OnInit, ViewChild, ElementRef, AfterViewInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { LoginComponent } from '../login/login.component';\nimport { AuthenticationService } from '../authentication.service';\nimport { User } from '../user';\nimport { RegisterComponent } from '../register/register.component';\n\n\n@Component({\n  selector: 'app-homepage',\n  templateUrl: './homepage.component.html',\n  styleUrls: ['./homepage.component.css']\n})\nexport class HomepageComponent implements OnInit, AfterViewInit{\n  constructor(public dialog: MatDialog, public auth: AuthenticationService) { }\n  user: User\n\n  openDialog(): void {\n    const dialogRef = this.dialog.open(LoginComponent, {\n      width: '250px',\n      data: {}\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log(result, \" this is the result\");\n\n    });\n  }\n  openRegDialog():void{\n    const regDialog = this.dialog.open(RegisterComponent,{\n      width: '250px',\n      data: {}\n    })\n  }\nlogout():void{\n  this.auth.logout()\n}\n\n  ngOnInit(): void {\n    //this.auth.user.next({username: \"cumLord\"})\n      this.auth.get_user();\n\n      this.auth.user.subscribe((result)=> {\n        this.user = result\n\n      }\n        )\n\n\n  }\n\n  ngAfterViewInit(): void {\n\n  }\n\n}\n","<mat-toolbar>\n\n  <div *ngIf=\"!user; else elseBlock\">\n    <button mat-raised-button color=\"warn\" [matMenuTriggerFor]=\"aboveMenu\">Hello stranger</button>\n    <mat-menu #aboveMenu=\"matMenu\" yPosition=\"above\">\n      <button (click)=\"openDialog()\" mat-menu-item>Log in</button>\n      <button (click)=\"openRegDialog()\" mat-menu-item>Register</button>\n    </mat-menu>\n  </div>\n\n  <ng-template #elseBlock>\n    <div>\n      <button mat-stroked-button [matMenuTriggerFor]=\"aboveMenu\">Hello {{user.username}}</button>\n      <mat-menu #aboveMenu=\"matMenu\" yPosition=\"above\">\n        <button (click)=\"logout()\" mat-menu-item>Logout</button>\n        <button  mat-menu-item>Profile</button>\n      </mat-menu>\n    </div>\n  </ng-template>\n</mat-toolbar>\n\n<div style=\"margin: 10px\">\n\n\n\n  <div style=\"float:left\" style=\"float:left; width: auto; height: auto\">\n    <mat-tab-group>\n      <mat-tab label=\"One\">\n        <app-tree></app-tree>\n      </mat-tab>\n      <mat-tab label=\"Two\">\n        <h1>Some more tab content</h1>\n        <p>...</p>\n      </mat-tab>\n    </mat-tab-group>\n  </div>\n\n  <div\n    style=\" position: relative; top: 60px; float: left; border: solid black; width:auto; margin: 20px 20px 20px 20px; padding: 20px\">\n    <form class=\"example-form\">\n      <mat-form-field class=\"example-full-width\">\n        <mat-label>Amount</mat-label>\n        <input matInput #message maxlength=\"256\" type=\"number\" placeholder=\"999\">\n        <mat-hint align=\"start\"><strong>Numbers only</strong> </mat-hint>\n        <mat-hint align=\"end\"> max 5000</mat-hint>\n      </mat-form-field>\n    </form>\n    <button mat-raised-button>Buy</button>\n\n  </div>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\n//import { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material\";\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { AuthenticationService } from '../authentication.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  form: FormGroup;\n  //public profileForm: FormGroup;\n\n  profileForm = new FormGroup({\n    username: new FormControl(''),\n    password: new FormControl(''),\n  })\n  constructor(\n    private auth: AuthenticationService,\n    private dialogRef: MatDialogRef<LoginComponent>,\n  ) {}\n\n  ngOnInit(): void {\n\n\n  }\n\n\n\n  save() {\n    this.auth.login(\n      this.profileForm.controls.username.value,\n      this.profileForm.controls.password.value)\n\n    this.dialogRef.close(this.profileForm.value);\n  }\n\n  cancel(){\n    this.dialogRef.close()\n  }\n}\n","<p>login works!</p>\n<h1 mat-dialog-title>Login form</h1>\n<form [formGroup]=\"profileForm\">\n  <mat-form-field class=\"\">\n    <mat-label>User name</mat-label>\n    <input matInput #username maxlength=\"256\" type = \"string\" placeholder=\"password\"  formControlName=\"username\">\n    <mat-hint align=\"start\"><strong>Any name</strong> </mat-hint>\n  </mat-form-field>\n  <mat-form-field class=\"\">\n    <mat-label>Password</mat-label>\n    <input matInput #password1 maxlength=\"256\" type = \"password\" placeholder=\"password\" formControlName=\"password\">\n    <mat-hint align=\"start\"><strong>a strong password</strong> </mat-hint>\n  </mat-form-field>\n\n</form>\n<!-- <button mat-button [mat-dialog-close]=  cdkFocusInitial>Ok</button> -->\n<button mat-button (click)=\"cancel()\">Cancel</button>\n<button mat-button (click)=\"save()\">Login</button>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../authentication.service';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { FormGroup, FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  constructor(\n    private auth: AuthenticationService,\n\n\n    private dialogRef: MatDialogRef<RegisterComponent>,\n  ) { }\n\n  profileForm = new FormGroup({\n    username: new FormControl(''),\n    password: new FormControl(''),\n    password2: new FormControl(''),\n  })\n  save() {\n    this.auth.register(\n      this.profileForm.controls.username.value,\n      this.profileForm.controls.password.value)\n\n    this.dialogRef.close(this.profileForm.value);\n  }\n\n  cancel(){\n    this.dialogRef.close()\n  }\n  ngOnInit(): void {\n  }\n\n}\n","\n<h1 mat-dialog-title>Register form</h1>\n<form [formGroup]=\"profileForm\">\n  <mat-form-field class=\"\">\n    <mat-label>User name</mat-label>\n    <input matInput #username maxlength=\"256\" type = \"string\" placeholder=\"some_name\"  formControlName=\"username\">\n    <mat-hint align=\"start\"><strong>Any name</strong> </mat-hint>\n  </mat-form-field>\n  <mat-form-field class=\"\">\n    <mat-label>Password</mat-label>\n    <input matInput #password1 maxlength=\"256\" type = \"password\" placeholder=\"password\" formControlName=\"password\">\n    <mat-hint align=\"start\"><strong>a strong password</strong> </mat-hint>\n  </mat-form-field>\n\n  <mat-form-field class=\"\">\n    <mat-label>Password</mat-label>\n    <input matInput #password1 maxlength=\"256\" type = \"password\" placeholder=\"password\" formControlName=\"password2\">\n    <mat-hint align=\"start\"><strong>Repeat password</strong> </mat-hint>\n  </mat-form-field>\n\n</form>\n<!-- <button mat-button [mat-dialog-close]=  cdkFocusInitial>Ok</button> -->\n<button mat-button (click)=\"cancel()\">Cancel</button>\n<button mat-button (click)=\"save()\">Register</button>\n","import { Component, OnInit, AfterViewInit, AfterContentInit } from '@angular/core';\nimport { AuthenticationService } from '../authentication.service';\nimport { User } from '../user';\ndeclare const ReconnectingWebSocket: any;\ndeclare const d3: any;\n\n@Component({\n  selector: 'app-tree',\n  templateUrl: './tree.component.html',\n  styleUrls: ['./tree.component.css']\n})\nexport class TreeComponent implements OnInit, AfterViewInit {\n\n  constructor(private auth: AuthenticationService) { }\n  public data: any[]\n  public users: User[]\n  update: void;\n  ngOnInit(): void {\n\n  }\n  ngAfterViewInit(): void {\n    function update() {\n\n      svg = d3.select('.mycanvas')\n        .append('svg')\n        .attr('width', dims.width + 100)\n        .attr('height', dims.height + 100);\n      console.log(svg, \"this is the svg element\")\n      //add the group element that will contain all the drawings of the graph\n      graph = svg.append('g')\n        .attr('transform', 'translate(50, 50)');\n      console.log(graph, \"this is teh graph\")\n\n      var scale = d3.scaleOrdinal(d3[\"schemeSet3\"])\n        .domain(this.users.map((element) => element.username))\n\n\n      graph.selectAll('.node').remove();\n      graph.selectAll('.link').remove();\n      this.data.sort((a, b) => a.number - b.number)\n      this.data.sort((a, b) => a.number % 2 == 1 ? a.number - b.number : b.number - a.number)\n      console.log(this.data, \"data before stratify\")\n      // stratify the data\n      var rootNode = d3.stratify()\n        .id(function (d) {\n          return d.number\n        })\n        .parentId(function (d) {\n          return d.parent;\n        })\n        (this.data)\n      //stratified data -> tree form data\n      var treeData = d3.tree().size([1400, 800])(rootNode)\n      //create the selection of nodes from the tree data descendants\n      var nodes = graph.selectAll('.node')\n        .data(treeData.descendants())\n\n      // save the links data from the stratified data\n      var links = graph.selectAll('.link').data(rootNode.links())\n\n      // draw the links as path elements\n      links.enter().append('path')\n        .attr('stroke', 'blue')\n        .attr('d', d3.linkHorizontal()\n          .x(function (d) { return d.y; })\n          .y(function (d) { return d.x; }))\n        .attr('class', 'link')\n        .attr('fill', 'none')\n        .attr('stroke', d => d.target.data.hasOwnProperty('userName') ? scale(d.source.data.userName) : 'gray')////#aaa\n        .attr('stroke-width', 2)\n\n      // add a group for each node with the specified coordinates\n      var enterNodes = nodes.enter().append('g')\n        .attr('transform', (d, i, n) => {\n          //rotates the tree\n          let x = d.y\n          let y = d.x\n          return `translate(${x},${y})`\n        })\n        .attr('class', \"node\")\n\n      // draw rectangles in each node group\n      var rectangles = enterNodes.append('rect')\n        .attr('fill', d => d.data.userName != null ? scale(d.data.userName) : 'gray')\n        .attr('stroke', 'black')\n        .attr('width', 30)//30\n        .attr('height', 30)\n        .attr('transform', d => `translate(${-5}, ${-10})`).raise();\n\n\n      // add a click event on each rectangle\n\n\n\n\n      enterNodes.on(\"click\", (d) => {\n        console.log(d)\n\n      })\n      enterNodes.on(\"mouseenter\", (d) => {\n        console.log(d)\n\n      })\n\n\n\n\n\n      // add text to each of the node groups\n      enterNodes.append('text')\n        .text((d) => { return d.data.number })\n        .attr('fill', d => d.data.childrenMissing > 0 ? 'black' : \"red\")\n        .attr('transform', d => `translate(${2}, ${10})`);\n\n      var colorLegend = d3.legendColor()\n        .shape(\"path\", d3.symbol().type(d3.symbolTriangle).size(150)())\n        .shapePadding(10)\n        //use cellFilter to hide the \"e\" cell\n        .cellFilter(function (d) { return d.label !== \"e\" })\n        .scale(scale)\n\n      graph.append(\"g\")\n        .attr(\"class\", \"userLegend\")\n      graph.select(\".userLegend\").call(colorLegend)\n\n\n\n\n\n\n    }\n\n    this.auth.get_users().subscribe(dataResponse => {\n\n      this.users = dataResponse\n      console.log(this.users, \"this is the users data form subscription\")\n\n      var ws_scheme = window.location.protocol == \"https:\" ? \"wss\" : \"ws\";\n      var ws_path = ws_scheme + '://' + \"127.0.0.1:8000\" + \"/treeChannel/\"\n      console.log(ws_path, \"socket path\")\n      var socket = new ReconnectingWebSocket(ws_path)\n      console.log(\"Connecting to \" + ws_path);\n      //let socket = new WebSocket(\"wss://limitless-wildwood-61701.herokuapp.com/treeChannel\");\n      let dis = this\n      socket.onmessage = (event) => {\n        this.data = JSON.parse(event.data)\n\n        update.apply(this)\n      };\n    }\n    )\n\n\n\n\n    var graph\n    var svg\n    const dims = { height: 1400, width: 800 };\n\n    //var d3 = window.d3\n\n\n\n\n\n\n\n\n\n\n\n    //add the group element that will contain all the drawings of the graph\n\n\n\n\n\n\n    var local = \"http://127.0.0.1:8000/\"\n    var production = \"https://limitless-wildwood-61701.herokuapp.com/\"\n    /*\n    make http service :D\n\n    $.ajax({\n           url: local + \"users/\", success: function(result){\n         users = result\n        }});\n       $.ajax({\n           url: local + \"nodes/\", success: function(result){\n         data = result\n         console.log(data, \"this is the damn data\")\n         update()\n       }}); */\n\n\n\n\n\n\n\n\n\n\n    let mario = this\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  }\n\n}\n","<p>tree works!</p>\n<div class=\"container\" style=\"float:left; width: auto; height: auto\">\n  <div id = \"mycanvas\" class=\"mycanvas\" style=\"border: solid black;\"></div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}