<<<<<<< HEAD
{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/authentication.service.ts","webpack:///src/app/data-reception.service.ts","webpack:///src/app/homepage/homepage.component.ts","webpack:///src/app/homepage/homepage.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/purchase.service.ts","webpack:///src/app/purchase/purchase.component.ts","webpack:///src/app/purchase/purchase.component.html","webpack:///src/app/register/register.component.ts","webpack:///src/app/register/register.component.html","webpack:///src/app/tree-directive.directive.ts","webpack:///src/app/tree-generator.service.ts","webpack:///src/app/tree/tree.component.ts","webpack:///src/app/tree/tree.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","AuthenticationService","http","user","userList","username","password","console","log","csrf","getCookie","csrfheader","getHost","post","subscribe","get_user","get","login","data","next","users","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","host","window","location","providedIn","DataReceptionService","auth","tree_data","task_data","ws_scheme","protocol","ws_path","socket","ReconnectingWebSocket","getSocketPath","dis","onmessage","event","JSON","parse","value","taskSocket","HomepageComponent","dialog","purchase","data_service","tree_service","color","mode","allTrees","index","tabs","selected","reload","pipe","ev","leading","trailing","d3","selectAll","select","remove","setTimeout","forEach","tree","renderTree","result","dataResponse","tab","dims","height","width","svg","append","attr","innerWidth","innerHeight","empty","graph","generateTree","node","d","reset","dialogRef","open","afterClosed","regDialog","Dialog","logout","sort","a","b","task","createConnection","purchaseDialog","LoginComponent","profileForm","controls","close","cancel","save","PurchaseService","amount","headers","PurchaseComponent","RegisterComponent","password2","register","TreeDirectiveDirective","renderer","elementRef","div","createElement","setAttribute","appendChild","nativeElement","TreeGeneratorService","localeCompare","create","scale","scaleOrdinal","domain","map","element","number","even","filter","odd","concat","rootNode","stratify","parentId","parent","nodes","links","enter","linkVertical","x","y","target","hasOwnProperty","source","userName","enterNodes","n","rectangles","raise","on","text","childrenMissing","colorLegend","legendColor","shape","symbol","type","symbolTriangle","size","shapePadding","cellFilter","label","call","TreeComponent","toString","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'milosSite';\n\n\n\n\n}\n","<app-homepage></app-homepage>\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomepageComponent } from './homepage/homepage.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { TreeComponent } from './tree/tree.component';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport { LoginComponent } from './login/login.component';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RegisterComponent } from './register/register.component';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport { TreeDirectiveDirective } from './tree-directive.directive';\nimport { PurchaseComponent } from './purchase/purchase.component';\nimport {MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport {MatCardModule} from '@angular/material/card';\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomepageComponent,\n    TreeComponent,\n    LoginComponent,\n    RegisterComponent,\n    TreeDirectiveDirective,\n    PurchaseComponent,\n  ],\n\n  imports: [\n    MatTabsModule,\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatMenuModule,\n    MatIconModule,\n    MatDialogModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MatToolbarModule,\n    MatProgressSpinnerModule,\n    MatSidenavModule,\n    FontAwesomeModule,\n    MatCardModule\n  ],\n\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, throwError, BehaviorSubject, Subscription } from 'rxjs';\nimport { catchError, retry } from 'rxjs/operators';\n\n\nimport { User } from './user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\nmario:User\n\n\n  constructor(private http: HttpClient) { }\n\n  public user = new BehaviorSubject<User>(null)\n  public userList = new BehaviorSubject<User[]>([])\n\n  login(username, password) {\n    console.log(username, password , \" this form is not empty\")\n    let csrf = this.getCookie('csrftoken')\n    let csrfheader = new HttpHeaders({ 'X-CSRFToken': csrf })\n    console.log(this.getHost() + \"auth/login/\")\n    this.http.post(this.getHost() + \"auth/login/\", { \"username\": username, \"password\": password }).//, { headers: csrfheader }\n      subscribe(() => this.get_user())\n  }\n  logout() {\n\n    this.http.get(this.getHost() + \"auth/logout/\")\n      .subscribe(() => {\n        this.get_user();// this.refreshCart()\n\n      })\n  }\n\n\n  register(username, password) {\n\n    this.http.post(this.getHost() + \"auth/register/\", { \"username\": username, \"password\": password })\n\n      .subscribe(() => {\n        this.login(username, password);\n        this.get_user()\n      })\n  }\n\n  get_user() {\n    console.log(\"this is the address\" + this.getHost())\n\n    this.http.get(this.getHost() + \"auth/user/\").subscribe((data: any) => {\n      console.log(data, \"this is the data\")\n      if (data.username) {\n        this.user.next(data)\n        console.log(data.username)\n      }\n      else {\n        this.user.next(null)\n        console.log(\"we got null for the user back \")\n      }\n    })\n  }\n\n  get_users(): void {\n    let users: User[]\n    this.http.get<User[]>(this.getHost() + \"users/\").subscribe((data: User[])=>{\n      this.userList.next(data)\n    })\n  }\n\n  getCookie(name) {\n    var cookieValue = null;\n    if (document.cookie && document.cookie !== '') {\n      var cookies = document.cookie.split(';');\n      for (var i = 0; i < cookies.length; i++) {\n        var cookie = cookies[i].trim();\n        // Does this cookie string begin with the name we want?\n        if (cookie.substring(0, name.length + 1) === (name + '=')) {\n          cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n          break;\n        }\n      }\n    }\n    return cookieValue;\n  }\n\n  public getHost() {\n    var host = window.location.host\n    if (host == \"localhost:4200\" || host == \"127.0.0.1:8000\") {\n      return \"http://127.0.0.1:8000/\"\n    }\n    else {\n      return \"https://limitless-wildwood-61701.herokuapp.com/\"\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, throwError, BehaviorSubject, Subject, Subscription } from 'rxjs';\nimport { Node } from './node';\nimport { AuthenticationService } from './authentication.service';\ndeclare const ReconnectingWebSocket: any;\n@Injectable({\n  providedIn: 'root'\n})\n\n\n\n\n\nexport class DataReceptionService {\n  public tree_data = new Subject<Node[][]>()\n  public task_data = new BehaviorSubject<any>({})\n  constructor(private auth: AuthenticationService) { }\n\n  getSocketPath(): string{\n    var ws_scheme = window.location.protocol == \"https:\" ? \"wss\" : \"ws\";\n    var host = window.location.host;\n    if (host == \"localhost:4200\"){\n      host = \"127.0.0.1:8000\"\n    }\n    var ws_path = ws_scheme + '://' + host + \"/treeChannel/\"\n     /* var ws_path = \"ws://limitless-wildwood-61701.herokuapp.com/treeChannel/\" */\n    return ws_path\n  }\n\n  createConnection() {\n\n\n    var socket = new ReconnectingWebSocket(this.getSocketPath() + \"tree/\")\n    console.log(\"Connecting to \" + this.getSocketPath());\n    //let socket = new WebSocket(\"wss://limitless-wildwood-61701.herokuapp.com/treeChannel\");\n    let dis = this\n    socket.onmessage = (event) => {\n      this.tree_data.next(JSON.parse(event.data))\n      console.log(event.value, \" coming from service\")\n      //update.apply(this)\n    };\n\n    var taskSocket = new ReconnectingWebSocket(this.getSocketPath() + \"task/\")\n    console.log(\"Connecting to \" + this.getSocketPath() + \"task/\");\n    //let socket = new WebSocket(\"wss://limitless-wildwood-61701.herokuapp.com/treeChannel\");\n\n    taskSocket.onmessage = (event) => {\n      this.task_data.next(JSON.parse(event.data))\n      console.log(this.task_data.value, \" coming from task service\")\n      //update.apply(this)\n    };\n\n  }\n}\n\n//ws://127.0.0.1:8000/treeChannel/task/\n","import { Component, OnInit, ViewChild, ElementRef, AfterViewInit, HostListener } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { LoginComponent } from '../login/login.component';\nimport { AuthenticationService } from '../authentication.service';\nimport { User } from '../user';\nimport { RegisterComponent } from '../register/register.component';\nimport { PurchaseService } from '../purchase.service';\nimport { DataReceptionService } from '../data-reception.service';\nimport { Node } from '../node';\nimport { TreeGeneratorService } from '../tree-generator.service';\nimport { MDCTabBar } from '@material/tab-bar';\nimport { PurchaseComponent } from '../purchase/purchase.component';\nimport { Subject, BehaviorSubject, interval } from 'rxjs';\nimport { debounce, skip, throttle } from 'rxjs/operators';\nimport {ThemePalette} from '@angular/material/core';\nimport {ProgressSpinnerMode} from '@angular/material/progress-spinner';\n\ndeclare const d3: any;\n\n@Component({\n  selector: 'app-homepage',\n  templateUrl: './homepage.component.html',\n  styleUrls: ['./homepage.component.css']\n})\nexport class HomepageComponent implements OnInit, AfterViewInit {\n  color: ThemePalette = 'primary';\n  mode: ProgressSpinnerMode = 'determinate';\n  value = 50;\n  allTrees: Node[][] = []\n  user: User;\n  users: User[]\n  index: number = 0\n\n  task: any;\n\n  public reload: BehaviorSubject<any>\n  constructor(\n    public dialog: MatDialog,\n    public auth: AuthenticationService,\n    public purchase: PurchaseService,\n    public data_service: DataReceptionService,\n    public tree_service: TreeGeneratorService,\n\n\n  ) { }\n  @HostListener('window:resize', ['$event'])\n  dostuff() {\n        //this.allTrees.forEach((tree, index)=>this.renderTree(this.allTrees[index],index))\n        console.log(\"reload triggered by window size change\")\n        this.reload.next(\"oh yea\")\n      }\n\n\n\n\n  ngOnInit(): void {\n\n\n    this.reload = new BehaviorSubject(null)\n    this.reload.pipe(\n      throttle(ev => interval(2000), { leading: true, trailing: true }),\n\n    ).subscribe(() => {\n      console.log(\"reload triggered\")\n      d3.selectAll(\".genericClass\").select(\"svg\").remove();\n      setTimeout(() => {\n        this.allTrees.forEach((tree, index) => this.renderTree(tree, index))\n      }, 1000);\n\n    })\n\n\n      //this.auth.user.next({username: \"cumLord\"})\n    this.auth.get_user();\n\n    this.auth.user.subscribe((result) => {\n      this.user = result\n    })\n    this.auth.userList.subscribe(dataResponse => {\n      this.users = dataResponse\n    })\n  }\n\n\n  tabs: any[] = [\n    {\n      selected: true,\n      name: \"First Tree\"\n    },\n    {\n      selected: false,\n      name: \"Second Tree\"\n    },\n    {\n      selected: false,\n      name: \"Third Tree\"\n    },\n    {\n      selected: false,\n      name: \"Fourth Tree\"\n    },\n    {\n      selected: false,\n      name: \"Fifth Tree\"\n    },\n  ]\n\n  selectTab(index) {\n\n\n\n    this.tabs.forEach(tab => tab.selected = false)\n    console.log(this.tabs[index].name)\n    this.tabs[index].selected = true\n\n\n\n\n    //this.loading= false;\n\n\n  }\n  renderTree(data, index): void {\n    console.log(\"#canvas-\" + index)\n    var dims = { height: 1000, width: 2000 };\n\n    var svg = d3.select(\"#canvas-\" + index)\n      .append('svg')\n      .attr('width', window.innerWidth)\n      .attr('height', window.innerHeight * 0.80);\n    console.log(svg.empty(), \" nothing selected\")\n\n    //https://www.w3schools.com/jsref/dom_obj_all.asp\n    var graph = this.tree_service.generateTree(this.users, data, window.innerWidth, window.innerHeight);\n    svg.append(() => graph.node()).attr('transform', d => `translate(${10}, ${15})`);\n    console.log(graph.node(), \" graph nodes\")\n\n  }\n\n  delete() {\n    this.purchase.reset();\n\n  }\n\n  openDialog(): void {\n    const dialogRef = this.dialog.open(LoginComponent, {\n      width: '250px',\n      data: {}\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log(result, \" this is the result\");\n    });\n  }\n\n\n  openRegDialog(): void {\n    const regDialog = this.dialog.open(RegisterComponent, {\n      width: '250px',\n      data: {}\n    })\n  }\n\n  purchaseDialog(): void {\n    let Dialog = this.dialog.open(PurchaseComponent, {\n      width: 'auto',\n      data: {}\n    })\n  }\n  logout(): void {\n    this.auth.logout()\n  }\n\n  /*   buy(amount): void {\n      this.purchase.purchase(amount)\n    } */\n  nameFunction() {\n    return \"a name\"\n  }\n\n\n  ngAfterViewInit(): void {\n\n    this.data_service.tree_data.subscribe((result) => {\n\n      console.log(result, \" socket sent a message\")\n\n      this.allTrees = result.sort((a, b) => b.length - a.length)\n\n      if (result.length > 0) {\n        console.log(result[0].length, \"is bigger than 0\")\n        console.log(result[0].length)\n        this.reload.next(\"reload baby\")\n      }\n    })\n\n\n    this.data_service.task_data.subscribe((result) => {\n      console.log(result, \" current task data\")\n      this.task = result\n      //this.taskFraction = result.fraction * 100\n\n    })\n    this.data_service.createConnection()\n\n\n  }\n}\n","<mat-toolbar>\n  <div *ngIf=\"!user; else elseBlock\">\n    <button mat-raised-button color=\"warn\" [matMenuTriggerFor]=\"aboveMenu\">Hello stranger</button>\n    <mat-menu #aboveMenu=\"matMenu\" yPosition=\"above\">\n      <button (click)=\"openDialog()\" mat-menu-item>Log in</button>\n      <button (click)=\"openRegDialog()\" mat-menu-item>Register</button>\n    </mat-menu>\n  </div>\n\n  <ng-template #elseBlock>\n    <div>\n      <button mat-stroked-button [matMenuTriggerFor]=\"aboveMenu\">Hello {{user.username}}</button>\n      <mat-menu #aboveMenu=\"matMenu\" yPosition=\"above\">\n        <button (click)=\"logout()\" mat-menu-item>Logout</button>\n        <button mat-menu-item>Profile</button>\n      </mat-menu>\n    </div>\n  </ng-template>\n\n  <button (click)=\"purchaseDialog()\" style=\"margin: 10px;\" color=\"basic\" mat-raised-button color=\"\">Shop</button>\n\n  <mat-progress-spinner   class=\"progressClass\" [diameter]=\"46\"\n    [value]=\"task?.fraction ? task.fraction * 100: 0\">\n  </mat-progress-spinner>\n\n  <p style =\" text-align: center; margin-left: auto;\n  margin-right: auto;\"> {{task?.text}}</p>\n\n\n\n\n\n  <button mat-mini-fab color=\"basic\" aria-label=\"Example icon button with a delete icon\" style=\"  margin-left: auto; \"\n    (click)=\"delete()\">\n    <mat-icon>delete</mat-icon>\n  </button>\n</mat-toolbar>\n\n<div class=\"tab_bar\">\n  <button *ngFor=\"let tree of allTrees; index as i\" class=\"tab_item\" [class.tab_item_selected]=\"tabs[i].selected\"\n    (click)=selectTab(i) mat-raised-button color=\"\">{{tabs[i].name}}</button>\n</div>\n\n<div *ngFor=\"let tree of allTrees; index as i\" class=\"\" [class.selected]=\"tabs[i].selected\"\n  [class.content]=\"!tabs[i].selected\">\n  <div class=\"genericClass\" [attr.id]=\"'canvas-' + i\"></div>\n</div>\n\n\n<!--\n<div class=\"fa-9x loaderHolder\" [class.hidden]=\"!loading\" [class.loaderHolder]=\"loading\">\n  <i class=\"fas fa-cog fa-spin\" style=\"margin:auto\"></i>\n</div>\n -->\n","import { Component, OnInit } from '@angular/core';\n//import { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material\";\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { AuthenticationService } from '../authentication.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  form: FormGroup;\n  //public profileForm: FormGroup;\n\n  profileForm = new FormGroup({\n    username: new FormControl(''),\n    password: new FormControl(''),\n  })\n  constructor(\n    private auth: AuthenticationService,\n    private dialogRef: MatDialogRef<LoginComponent>,\n  ) {}\n\n  ngOnInit(): void {\n\n\n  }\n\n\n\n  save() {\n    this.auth.login(\n      this.profileForm.controls.username.value,\n      this.profileForm.controls.password.value)\n\n    this.dialogRef.close(this.profileForm.value);\n  }\n\n  cancel(){\n    this.dialogRef.close()\n  }\n}\n","<p>login works!</p>\n<h1 mat-dialog-title>Login form</h1>\n<form [formGroup]=\"profileForm\">\n  <mat-form-field class=\"\">\n    <mat-label>User name</mat-label>\n    <input matInput #username maxlength=\"256\" type = \"string\" placeholder=\"password\"  formControlName=\"username\">\n    <mat-hint align=\"start\"><strong>Any name</strong> </mat-hint>\n  </mat-form-field>\n  <mat-form-field class=\"\">\n    <mat-label>Password</mat-label>\n    <input matInput #password1 maxlength=\"256\" type = \"password\" placeholder=\"password\" formControlName=\"password\">\n    <mat-hint align=\"start\"><strong>a strong password</strong> </mat-hint>\n  </mat-form-field>\n\n</form>\n<!-- <button mat-button [mat-dialog-close]=  cdkFocusInitial>Ok</button> -->\n<button mat-button (click)=\"cancel()\">Cancel</button>\n<button mat-button (click)=\"save()\">Login</button>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { AuthenticationService } from './authentication.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PurchaseService {\n\n  constructor(private http: HttpClient, private auth: AuthenticationService) { }\n\n  purchase(amount) {\n    let csrf = this.auth.getCookie('csrftoken')\n    csrf = csrf == null? \"something\":csrf;\n\n    let csrfheader = new HttpHeaders({ 'X-CSRFToken': csrf })\n    console.log(this.auth.getHost() + \"tree/buy/\")\n    this.http.post(this.auth.getHost() + \"tree/buy/\", { \"amount\": amount}, { headers: csrfheader })\n      .subscribe(() => {})\n  }\n\n  reset(){\n    this.http.get(this.auth.getHost() + \"delete\")\n    .subscribe(() => {\n      //nothing to do here\n    })\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { PurchaseService } from '../purchase.service';\n@Component({\n  selector: 'app-purchase',\n  templateUrl: './purchase.component.html',\n  styleUrls: ['./purchase.component.css']\n})\nexport class PurchaseComponent implements OnInit {\n\n  constructor(\n    private dialogRef: MatDialogRef<PurchaseComponent>,\n    public purchase: PurchaseService,\n    ) { }\n\n  ngOnInit(): void {\n  }\n  save(amount) {\n    this.purchase.purchase(amount)\n\n    this.dialogRef.close();\n  }\n\n}\n","  <form class=\"example-form\">\n    <mat-form-field class=\"example-full-width\">\n      <mat-label>Amount</mat-label>\n      <input matInput #message maxlength=\"256\" type=\"number\" placeholder=\"999\">\n      <mat-hint align=\"start\"><strong>Numbers only</strong> </mat-hint>\n      <mat-hint align=\"end\"> max 5000</mat-hint>\n    </mat-form-field>\n  </form>\n  <button (click)=\"save(message.value)\" [disabled]=\"false\" mat-raised-button>Buy</button>\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../authentication.service';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { FormGroup, FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  constructor(\n    private auth: AuthenticationService,\n\n\n    private dialogRef: MatDialogRef<RegisterComponent>,\n  ) { }\n\n  profileForm = new FormGroup({\n    username: new FormControl(''),\n    password: new FormControl(''),\n    password2: new FormControl(''),\n  })\n  save() {\n    this.auth.register(\n      this.profileForm.controls.username.value,\n      this.profileForm.controls.password.value)\n\n    this.dialogRef.close(this.profileForm.value);\n  }\n\n  cancel(){\n    this.dialogRef.close()\n  }\n  ngOnInit(): void {\n  }\n\n}\n","\n<h1 mat-dialog-title>Register form</h1>\n<form [formGroup]=\"profileForm\">\n  <mat-form-field class=\"\">\n    <mat-label>User name</mat-label>\n    <input matInput #username maxlength=\"256\" type = \"string\" placeholder=\"some_name\"  formControlName=\"username\">\n    <mat-hint align=\"start\"><strong>Any name</strong> </mat-hint>\n  </mat-form-field>\n  <mat-form-field class=\"\">\n    <mat-label>Password</mat-label>\n    <input matInput #password1 maxlength=\"256\" type = \"password\" placeholder=\"password\" formControlName=\"password\">\n    <mat-hint align=\"start\"><strong>a strong password</strong> </mat-hint>\n  </mat-form-field>\n\n  <mat-form-field class=\"\">\n    <mat-label>Password</mat-label>\n    <input matInput #password1 maxlength=\"256\" type = \"password\" placeholder=\"password\" formControlName=\"password2\">\n    <mat-hint align=\"start\"><strong>Repeat password</strong> </mat-hint>\n  </mat-form-field>\n\n</form>\n<!-- <button mat-button [mat-dialog-close]=  cdkFocusInitial>Ok</button> -->\n<button mat-button (click)=\"cancel()\">Cancel</button>\n<button mat-button (click)=\"save()\">Register</button>\n","import { Directive, Input, Renderer2, ElementRef, OnInit } from '@angular/core';\n\n@Directive({\n  selector: '[appTreeDirective]'\n})\nexport class TreeDirectiveDirective implements OnInit {\n@Input() treeData:any;\n  constructor(private renderer: Renderer2, private elementRef: ElementRef) { }\nngOnInit(): void{\n  const div = this.renderer.createElement('div');\n  //const text = this.renderer.createText('Hello world!');\nthis.renderer.setAttribute(div, \"innerHtml\",\"<p> hehe </p>\")\n  //this.renderer.appendChild(div, text);\n  this.renderer.appendChild(this.elementRef.nativeElement, div)\n}\n}\n","import { Injectable } from '@angular/core';\nimport { User } from './user';\nimport { Node } from './node';\ndeclare const d3:any;\n@Injectable({\n  providedIn: 'root'\n})\nexport class TreeGeneratorService {\n\n  constructor() { }\n\n  public generateTree(users:User[], data:Node[], width, height):any{\n    var height:any = height - 200\n    //add the group element that will contain all the drawings of the graph\n    //graph = svg.append('g').attr('transform', 'translate(50, 50)');\n    users = users.sort((a,b) => a.username.localeCompare(b.username))\n    console.log(users, \"users \")\n    var graph = d3.create('svg:g');\n    var scale;\n    scale = d3.scaleOrdinal(d3[\"schemeSet3\"])\n      .domain(users.map((element) => element.username))\n\n    graph.selectAll('.node').remove();\n    graph.selectAll('.link').remove();\n\n\n    data.sort((a, b) => a.number - b.number)\n\n    let even = data.filter((a)=>a.number%2 == 0).sort((a,b)=>b.number - a .number)\n    let odd = data.filter((a)=>a.number%2 == 1).sort((a,b)=>a.number - b .number)\n\n    data = even.concat(odd)\n\n/*\n    data.sort((a, b) => a.number % 2 == 0 ?  b.number - a.number:0)\n\n    data.sort((a, b) => a.number % 2 == 1 ? a.number - b.number:0)\n */\n\n\n\n    console.log(data, \" data that is not sorted\")\n    // this is broken !! sort on the serverside\n    // stratify the data\n    var rootNode = d3.stratify()\n      .id(function (d) {\n        return d.number\n      })\n      .parentId(function (d) {\n        return d.parent;\n      })\n      (data)\n    //stratified data -> tree form data\n\n    //var treeData = d3.tree().size([width * 0.97, height*0.75])(rootNode)\n\n    //create the selection of nodes from the tree data descendants\n/*\n    var nodes = graph.selectAll('.node')\n      .data(treeData.descendants())\n */\nvar nodes = graph.selectAll('.node')\n.data(data)\nconsole.log(nodes, \" these are the nodes\")\n/*\nvar nodes2 = graph.selectAll('.node')\n.data(treeData.descendants())\n */\nconsole.log(nodes, \" these are the nodes\")\n    // save the links data from the stratified data\n    var links = graph.selectAll('.link').data(rootNode.links())\n    console.log(links, \" results of links()\")\n    // draw the links as path elements\n    links.enter().append('path')\n      .attr('stroke', 'blue')\n      .attr('d', d3.linkVertical()\n        .x(function (d) { return d.data.x * width})\n        .y(function (d) { return d.data.y * height }))\n      .attr('class', 'link')\n      .attr('fill', 'none')\n      .attr('stroke', d => d.target.data.hasOwnProperty('userName') ? scale(d.source.data.userName) : 'gray')////#aaa\n      .attr('stroke-width', 2)\n\n    // add a group for each node with the specified coordinates\n    var enterNodes = nodes.enter().append('g')\n      .attr('transform', (d, i, n) => {\n        //rotates the tree\n        let x = d.x *width\n        let y = d.y * height\n        return `translate(${x},${y})`\n      })\n      .attr('class', \"node\")\n\n    // draw rectangles in each node group\n    var rectangles = enterNodes.append('rect')\n      .attr('fill', d => d.userName != null ? scale(d.userName) : 'gray')\n      .attr('stroke', 'black')\n      .attr('width', 30)//30\n      .attr('height', 30)\n      .attr('transform', d => `translate(${-5}, ${-10})`).raise();\n    // add a click event on each rectangle\n    enterNodes.on(\"click\", (d) => {\n      console.log(d)\n    })\n    enterNodes.on(\"mouseenter\", (d) => {\n\n    })\n    // add text to each of the node groups\n    enterNodes.append('text')\n      .text((d) => { return d.number })\n      .attr('fill', d => d.childrenMissing > 0 ? 'black' : \"red\")\n      .attr('transform', d => `translate(${2}, ${10})`);\n\n    var colorLegend = d3.legendColor()\n      .shape(\"path\", d3.symbol().type(d3.symbolTriangle).size(150)())\n      .shapePadding(10)\n      //use cellFilter to hide the \"e\" cell\n      .cellFilter(function (d) { return d.label !== \"e\" })\n      .scale(scale)\n\n    graph.append(\"g\")\n      .attr(\"class\", \"userLegend\")\n    graph.select(\".userLegend\").call(colorLegend)\n\n    return graph\n  }\n}\n","import { Component, OnInit, AfterViewInit, AfterContentInit, Input } from '@angular/core';\nimport { AuthenticationService } from '../authentication.service';\nimport { User } from '../user';\nimport { Node } from '../node';\nimport { TreeGeneratorService } from '../tree-generator.service';\ndeclare const ReconnectingWebSocket: any;\ndeclare const d3: any;\n\n\n@Component({\n  selector: 'app-tree',\n  templateUrl: './tree.component.html',\n  styleUrls: ['./tree.component.css']\n})\nexport class TreeComponent implements OnInit, AfterViewInit {\n\n  constructor(\n    public auth: AuthenticationService,\n    public tree_service: TreeGeneratorService) { }\n  //public data: any[]\n  public users: User[]\n  update: void;\n  name: string;\n  @Input() data: Node[];\n  @Input() index:number;\n\n  ngOnInit(): void {\n    console.log(this.data, \" its the mofoking data\")\n    this.auth.userList.subscribe(dataResponse => {\n\n      this.users = dataResponse\n\n\n      console.log(this.users, \"this is the users data form subscription\")\n    })\n    this.name = this.data.length.toString()\n\n  }\n  ngAfterViewInit(): void {\n\n    /* setTimeout(() => {\n      var dims = { height: 1400, width: 800 };\n      var svg = d3.selectAll(\".canvas\")\n        .append('svg')\n        .attr('width', dims.width + 100)\n        .attr('height', dims.height + 100);\n      var graph = this.tree_service.generateTree(this.users,this.data);\n      console.log(graph.node(), \" nodes\")\n      svg.append(()=>graph.node())\n      svg.append(()=>graph.node())\n    }, 0); */\n\n  }\n\n}\n//setTimeout(() => {\n/*   var graph\n    var svg\n    const dims = { height: 1400, width: 800 };\n    svg = d3.selectAll(\".canvas\")\n      .append('svg')\n      .attr('width', dims.width + 100)\n      .attr('height', dims.height + 100);\n    //add the group element that will contain all the drawings of the graph\n\n    //graph = svg.append('g').attr('transform', 'translate(50, 50)');\n    var graph = d3.create('svg:g');\n    var scale;\n    scale = d3.scaleOrdinal(d3[\"schemeSet3\"])\n      .domain(this.users.map((element) => element.username))\n\n    graph.selectAll('.node').remove();\n    graph.selectAll('.link').remove();\n    this.data.sort((a, b) => a.number - b.number)\n    this.data.sort((a, b) => a.number % 2 == 1 ? a.number - b.number : b.number - a.number)\n    console.log(this.data, \"data before stratify\")\n    // stratify the data\n    var rootNode = d3.stratify()\n      .id(function (d) {\n        return d.number\n      })\n      .parentId(function (d) {\n        return d.parent;\n      })\n      (this.data)\n    //stratified data -> tree form data\n    var treeData = d3.tree().size([1400, 800])(rootNode)\n    //create the selection of nodes from the tree data descendants\n    var nodes = graph.selectAll('.node')\n      .data(treeData.descendants())\n\n    // save the links data from the stratified data\n    var links = graph.selectAll('.link').data(rootNode.links())\n\n    // draw the links as path elements\n    links.enter().append('path')\n      .attr('stroke', 'blue')\n      .attr('d', d3.linkHorizontal()\n        .x(function (d) { return d.y; })\n        .y(function (d) { return d.x; }))\n      .attr('class', 'link')\n      .attr('fill', 'none')\n      .attr('stroke', d => d.target.data.hasOwnProperty('userName') ? scale(d.source.data.userName) : 'gray')////#aaa\n      .attr('stroke-width', 2)\n\n    // add a group for each node with the specified coordinates\n    var enterNodes = nodes.enter().append('g')\n      .attr('transform', (d, i, n) => {\n        //rotates the tree\n        let x = d.y\n        let y = d.x\n        return `translate(${x},${y})`\n      })\n      .attr('class', \"node\")\n\n    // draw rectangles in each node group\n    var rectangles = enterNodes.append('rect')\n      .attr('fill', d => d.data.userName != null ? scale(d.data.userName) : 'gray')\n      .attr('stroke', 'black')\n      .attr('width', 30)//30\n      .attr('height', 30)\n      .attr('transform', d => `translate(${-5}, ${-10})`).raise();\n    // add a click event on each rectangle\n    enterNodes.on(\"click\", (d) => {\n      console.log(d)\n    })\n    enterNodes.on(\"mouseenter\", (d) => {\n      console.log(d)\n    })\n    // add text to each of the node groups\n    enterNodes.append('text')\n      .text((d) => { return d.data.number })\n      .attr('fill', d => d.data.childrenMissing > 0 ? 'black' : \"red\")\n      .attr('transform', d => `translate(${2}, ${10})`);\n\n    var colorLegend = d3.legendColor()\n      .shape(\"path\", d3.symbol().type(d3.symbolTriangle).size(150)())\n      .shapePadding(10)\n      //use cellFilter to hide the \"e\" cell\n      .cellFilter(function (d) { return d.label !== \"e\" })\n      .scale(scale)\n\n    graph.append(\"g\")\n      .attr(\"class\", \"userLegend\")\n    graph.select(\".userLegend\").call(colorLegend) */\n\n//svg.append(()=>graph.node())\n//},0);\n\n  //}\n\n\n","\n<div class=\"container\" style=\"float:left; width: auto; height: auto\">\n\n  <div class =\"canvas\" style=\"border: solid black;\">\n\n  </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}
=======
{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/authentication.service.ts","webpack:///src/app/data-reception.service.ts","webpack:///src/app/homepage/homepage.component.ts","webpack:///src/app/homepage/homepage.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/purchase.service.ts","webpack:///src/app/purchase/purchase.component.ts","webpack:///src/app/purchase/purchase.component.html","webpack:///src/app/register/register.component.ts","webpack:///src/app/register/register.component.html","webpack:///src/app/tree-directive.directive.ts","webpack:///src/app/tree-generator.service.ts","webpack:///src/app/tree/tree.component.ts","webpack:///src/app/tree/tree.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","AuthenticationService","http","user","userList","username","password","console","log","csrf","getCookie","csrfheader","getHost","post","subscribe","get_user","get","login","data","next","users","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","host","window","location","providedIn","DataReceptionService","auth","tree_data","task_data","ws_scheme","protocol","ws_path","socket","ReconnectingWebSocket","getSocketPath","dis","onmessage","event","JSON","parse","taskSocket","HomepageComponent","dialog","purchase","data_service","tree_service","color","mode","value","index","tabs","selected","reload","pipe","allTrees","forEach","tree","renderTree","dataSubscription","result","sort","a","b","nodes","dataResponse","tab","users_list","dims","height","width","d3","select","selectAll","remove","scale","scaleOrdinal","domain","graph","generateTree","innerWidth","innerHeight","graph_blobs","generateBlobTree","blobs","svg","append","attr","node","d","message","reset","dialogRef","open","afterClosed","regDialog","Dialog","logout","task","createConnection","unsubscribe","purchaseDialog","LoginComponent","profileForm","controls","close","cancel","save","PurchaseService","amount","headers","PurchaseComponent","RegisterComponent","password2","register","TreeDirectiveDirective","renderer","elementRef","div","createElement","setAttribute","appendChild","nativeElement","TreeGeneratorService","create","localeCompare","number","enterNodes","enter","n","x","y","rectangles","userName","boxWidth","grow_to","raise","on","text","childrenMissing","even","filter","odd","concat","rootNode","stratify","parentId","parent","links","linkVertical","target","hasOwnProperty","source","colorLegend","legendColor","shape","symbol","type","symbolTriangle","size","shapePadding","cellFilter","label","call","TreeComponent","toString","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'milosSite';\n\n\n\n\n}\n","<app-homepage></app-homepage>\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomepageComponent } from './homepage/homepage.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { TreeComponent } from './tree/tree.component';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport { LoginComponent } from './login/login.component';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RegisterComponent } from './register/register.component';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport { TreeDirectiveDirective } from './tree-directive.directive';\nimport { PurchaseComponent } from './purchase/purchase.component';\nimport {MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport {MatCardModule} from '@angular/material/card';\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomepageComponent,\n    TreeComponent,\n    LoginComponent,\n    RegisterComponent,\n    TreeDirectiveDirective,\n    PurchaseComponent,\n  ],\n\n  imports: [\n    MatTabsModule,\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatMenuModule,\n    MatIconModule,\n    MatDialogModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MatToolbarModule,\n    MatProgressSpinnerModule,\n    MatSidenavModule,\n    FontAwesomeModule,\n    MatCardModule\n  ],\n\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, throwError, BehaviorSubject, Subscription } from 'rxjs';\nimport { catchError, retry } from 'rxjs/operators';\n\n\nimport { User } from './user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\nmario:User\n\n\n  constructor(private http: HttpClient) { }\n\n  public user = new BehaviorSubject<User>(null)\n  public userList = new BehaviorSubject<User[]>([])\n\n  login(username, password) {\n    console.log(username, password , \" this form is not empty\")\n    let csrf = this.getCookie('csrftoken')\n    let csrfheader = new HttpHeaders({ 'X-CSRFToken': csrf })\n    console.log(this.getHost() + \"auth/login/\")\n    this.http.post(this.getHost() + \"auth/login/\", { \"username\": username, \"password\": password }).//, { headers: csrfheader }\n      subscribe(() => this.get_user())\n  }\n  logout() {\n\n    this.http.get(this.getHost() + \"auth/logout/\")\n      .subscribe(() => {\n        this.get_user();// this.refreshCart()\n\n      })\n  }\n\n\n  register(username, password) {\n\n    this.http.post(this.getHost() + \"auth/register/\", { \"username\": username, \"password\": password })\n\n      .subscribe(() => {\n        this.login(username, password);\n        this.get_user()\n      })\n  }\n\n  get_user() {\n    console.log(\"this is the address\" + this.getHost())\n\n    this.http.get(this.getHost() + \"auth/user/\").subscribe((data: any) => {\n      console.log(data, \"this is the data\")\n      if (data.username) {\n        this.user.next(data)\n        console.log(data.username)\n      }\n      else {\n        this.user.next(null)\n        console.log(\"we got null for the user back \")\n      }\n    })\n  }\n\n  get_users(): void {\n    let users: User[]\n    this.http.get<User[]>(this.getHost() + \"users/\").subscribe((data: User[])=>{\n      this.userList.next(data)\n    })\n  }\n\n  getCookie(name) {\n    var cookieValue = null;\n    if (document.cookie && document.cookie !== '') {\n      var cookies = document.cookie.split(';');\n      for (var i = 0; i < cookies.length; i++) {\n        var cookie = cookies[i].trim();\n        // Does this cookie string begin with the name we want?\n        if (cookie.substring(0, name.length + 1) === (name + '=')) {\n          cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n          break;\n        }\n      }\n    }\n    return cookieValue;\n  }\n\n  public getHost() {\n    var host = window.location.host\n    if (host == \"localhost:4200\" || host == \"127.0.0.1:8000\") {\n      return \"http://127.0.0.1:8000/\"\n    }\n    else {\n      return \"https://limitless-wildwood-61701.herokuapp.com/\"\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, throwError, BehaviorSubject, Subject, Subscription, } from 'rxjs';\nimport { Node } from './node';\nimport { AuthenticationService } from './authentication.service';\nimport { delay } from 'rxjs/operators';\nimport { Tree } from './tree';\ndeclare const ReconnectingWebSocket: any;\n@Injectable({\n  providedIn: 'root'\n})\n\n\n\n\n\nexport class DataReceptionService {\n  public tree_data = new Subject<Tree[]>()\n  public task_data = new BehaviorSubject<any>({})\n  constructor(private auth: AuthenticationService) { }\n\n  getSocketPath(): string{\n    var ws_scheme = window.location.protocol == \"https:\" ? \"wss\" : \"ws\";\n    var host = window.location.host;\n    if (host == \"localhost:4200\"){\n      host = \"127.0.0.1:8000\"\n    }\n    var ws_path = ws_scheme + '://' + host + \"/treeChannel/\"\n     /* var ws_path = \"ws://limitless-wildwood-61701.herokuapp.com/treeChannel/\" */\n    return ws_path\n  }\n\n  createConnection() {\n\n\n    var socket = new ReconnectingWebSocket(this.getSocketPath() + \"tree/\")\n    console.log(\"Connecting to \" + this.getSocketPath());\n    //let socket = new WebSocket(\"wss://limitless-wildwood-61701.herokuapp.com/treeChannel\");\n    let dis = this\n    socket.onmessage = (event) => {\n      this.tree_data.next(JSON.parse(event.data))\n\n      //update.apply(this)\n    };\n\n    var taskSocket = new ReconnectingWebSocket(this.getSocketPath() + \"task/\")\n    console.log(\"Connecting to \" + this.getSocketPath() + \"task/\");\n    //let socket = new WebSocket(\"wss://limitless-wildwood-61701.herokuapp.com/treeChannel\");\n\n    taskSocket.onmessage = (event) => {\n      this.task_data.next(JSON.parse(event.data))\n\n      //update.apply(this)\n    };\n\n  }\n}\n\n//ws://127.0.0.1:8000/treeChannel/task/\n","import { Component, OnInit, ViewChild, ElementRef, AfterViewInit, HostListener, OnDestroy } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { LoginComponent } from '../login/login.component';\r\nimport { AuthenticationService } from '../authentication.service';\r\nimport { User } from '../user';\r\nimport { RegisterComponent } from '../register/register.component';\r\nimport { PurchaseService } from '../purchase.service';\r\nimport { DataReceptionService } from '../data-reception.service';\r\nimport { Node } from '../node';\r\nimport { TreeGeneratorService } from '../tree-generator.service';\r\nimport { MDCTabBar } from '@material/tab-bar';\r\nimport { PurchaseComponent } from '../purchase/purchase.component';\r\nimport { Subject, BehaviorSubject, interval, Subscription } from 'rxjs';\r\nimport { debounce, skip, throttle, delay } from 'rxjs/operators';\r\nimport {ThemePalette} from '@angular/material/core';\r\nimport {ProgressSpinnerMode} from '@angular/material/progress-spinner';\r\nimport { Tree } from '../tree';\r\n\r\n\r\ndeclare const d3: any;\r\n\r\n@Component({\r\n  selector: 'app-homepage',\r\n  templateUrl: './homepage.component.html',\r\n  styleUrls: ['./homepage.component.css']\r\n})\r\nexport class HomepageComponent implements OnInit, AfterViewInit, OnDestroy {\r\n  color: ThemePalette = 'primary';\r\n  mode: ProgressSpinnerMode = 'determinate';\r\n  value = 50;\r\n  allTrees: Tree[];\r\n  user: User;\r\n  users: User[]\r\n  index: number = 0\r\n  dataSubscription: Subscription\r\n\r\n  task: any;\r\n\r\n  public reload: Subject<any>\r\n  constructor(\r\n    public dialog: MatDialog,\r\n    public auth: AuthenticationService,\r\n    public purchase: PurchaseService,\r\n    public data_service: DataReceptionService,\r\n    public tree_service: TreeGeneratorService,\r\n\r\n\r\n  ) { }\r\n  @HostListener('window:resize', ['$event'])\r\n  dostuff() {\r\n        //this.allTrees.forEach((tree, index)=>this.renderTree(this.allTrees[index],index))\r\n        console.log(\"reload triggered by window size change\")\r\n        this.reload.next(\"oh yea\")\r\n      }\r\n\r\n/*\r\n//.pipe(\r\n  throttle(ev => interval(2000), { leading: true, trailing: true }),\r\n  ) */\r\n\r\n  ngOnInit(): void {\r\n\r\n\r\n    this.reload = new Subject()\r\n    //.pipe(debounce(() => interval(2000)))\r\n    this.reload.pipe(debounce(() => interval(500))).subscribe(() => {\r\n     // d3.selectAll(\".genericClass\").select(\"svg\").remove();\r\n        console.log(\"reload after debounce\")\r\n        this.allTrees.forEach((tree, index) => this.renderTree(tree, index, this.allTrees[0].users))\r\n        console.log(\"didnt crash yet\")\r\n    })\r\n//it should start failing from here\r\n    this.dataSubscription = this.data_service.tree_data.subscribe((result) => {\r\n      this.allTrees = result.sort((a, b) => b.nodes.length - a.nodes.length)// why is this not failing\r\n      if (result.length > 0) {\r\n        console.log(\"data arrived \")\r\n        this.reload.next(\"reload baby\")\r\n        console.log(\"reload done\")\r\n      }\r\n    })\r\n\r\n      //this.auth.user.next({username: \"cumLord\"})\r\n    this.auth.get_user();\r\n    this.auth.user.subscribe((result) => {\r\n      this.user = result\r\n    })\r\n    this.auth.userList.subscribe(dataResponse => {\r\n      this.users = dataResponse\r\n    })\r\n  }\r\n\r\n\r\n  tabs: any[] = [\r\n    {\r\n      selected: true,\r\n      name: \"First Tree\"\r\n    },\r\n    {\r\n      selected: false,\r\n      name: \"Second Tree\"\r\n    },\r\n    {\r\n      selected: false,\r\n      name: \"Third Tree\"\r\n    },\r\n    {\r\n      selected: false,\r\n      name: \"Fourth Tree\"\r\n    },\r\n    {\r\n      selected: false,\r\n      name: \"Fifth Tree\"\r\n    },\r\n  ]\r\n\r\n  selectTab(index) {\r\n    this.tabs.forEach(tab => tab.selected = false)\r\n    this.tabs[index].selected = true\r\n    //this.loading= false;\r\n  }\r\n  renderTree(tree, index, users_list): void {\r\n\r\n    var dims = { height: 1000, width: 2000 };\r\n    d3.select(\"#canvas-\" + index).selectAll(\"*\").remove()\r\n    console.log(\"removed svg \")\r\n\r\n    //https://www.w3schools.com/jsref/dom_obj_all.asp\r\n    try{\r\n      var scale = d3.scaleOrdinal(d3[\"schemeSet3\"])// share scale between different types of trees\r\n      .domain(users_list.sort())\r\n      var graph = this.tree_service.generateTree(users_list, tree.nodes, window.innerWidth * 0.97, window.innerHeight, scale);\r\n      var graph_blobs = this.tree_service.generateBlobTree(users_list, tree.blobs, window.innerWidth *0.97, window.innerHeight,scale);\r\n\r\n      console.log(\"adding svg \")\r\n      var svg = d3.select(\"#canvas-\" + index).append(\"svg\")\r\n      .attr('width', window.innerWidth)\r\n      .attr('height', window.innerHeight * 0.80);\r\n\r\n  svg.append(() => graph.node()).attr('transform', d => `translate(${10}, ${15})`);\r\n  svg.append(() => graph_blobs.node()).attr('transform', d => `translate(${10}, ${15})`);\r\n\r\n  console.log(\"dunno\")\r\n    }\r\n\r\n    catch (e){\r\nconsole.log(\"failed to draw a tree: \", e.message)\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n  delete() {\r\n    this.purchase.reset();\r\n\r\n  }\r\n\r\n  openDialog(): void {\r\n    const dialogRef = this.dialog.open(LoginComponent, {\r\n      width: '250px',\r\n      data: {}\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n    });\r\n  }\r\n\r\n\r\n  openRegDialog(): void {\r\n    const regDialog = this.dialog.open(RegisterComponent, {\r\n      width: '250px',\r\n      data: {}\r\n    })\r\n  }\r\n\r\n  purchaseDialog(): void {\r\n    let Dialog = this.dialog.open(PurchaseComponent, {\r\n      width: 'auto',\r\n      data: {}\r\n    })\r\n  }\r\n  logout(): void {\r\n    this.auth.logout()\r\n  }\r\n  nameFunction() {\r\n    return \"a name\"\r\n  }\r\n\r\n\r\n  ngAfterViewInit(): void {\r\n\r\n\r\n\r\n\r\n    this.data_service.task_data.subscribe((result) => {\r\n\r\n      this.task = result\r\n      //this.taskFraction = result.fraction * 100\r\n\r\n    })\r\n    this.data_service.createConnection()\r\n\r\n\r\n  }\r\nngOnDestroy():void{\r\n  this.dataSubscription.unsubscribe()\r\n}\r\n\r\n}\r\n","<mat-toolbar>\n  <div *ngIf=\"!user; else elseBlock\">\n    <button mat-raised-button color=\"warn\" [matMenuTriggerFor]=\"aboveMenu\">Hello stranger</button>\n    <mat-menu #aboveMenu=\"matMenu\" yPosition=\"above\">\n      <button (click)=\"openDialog()\" mat-menu-item>Log in</button>\n      <button (click)=\"openRegDialog()\" mat-menu-item>Register</button>\n    </mat-menu>\n  </div>\n\n  <ng-template #elseBlock>\n    <div>\n      <button mat-stroked-button [matMenuTriggerFor]=\"aboveMenu\">Hello {{user.username}}</button>\n      <mat-menu #aboveMenu=\"matMenu\" yPosition=\"above\">\n        <button (click)=\"logout()\" mat-menu-item>Logout</button>\n        <button mat-menu-item>Profile</button>\n      </mat-menu>\n    </div>\n  </ng-template>\n\n  <button (click)=\"purchaseDialog()\" style=\"margin: 10px;\" color=\"basic\" mat-raised-button color=\"\">Shop</button>\n\n  <mat-progress-spinner   class=\"progressClass\" [diameter]=\"46\"\n    [value]=\"task?.fraction ? task.fraction * 100: 0\">\n  </mat-progress-spinner>\n\n  <p style =\" text-align: center; margin-left: auto;\n  margin-right: auto;\"> {{task?.text}}</p>\n\n\n\n\n\n  <button mat-mini-fab color=\"basic\" aria-label=\"Example icon button with a delete icon\" style=\"  margin-left: auto; \"\n    (click)=\"delete()\">\n    <mat-icon>delete</mat-icon>\n  </button>\n</mat-toolbar>\n\n<div class=\"tab_bar\">\n  <button *ngFor=\"let tree of allTrees; index as i\" class=\"tab_item\" [class.tab_item_selected]=\"tabs[i].selected\"\n    (click)=selectTab(i) mat-raised-button color=\"\">{{tabs[i].name}}</button>\n</div>\n\n<div *ngFor=\"let tree of allTrees; index as i\" class=\"\" [class.selected]=\"tabs[i].selected\"\n  [class.content]=\"!tabs[i].selected\">\n  <div class=\"genericClass\" [attr.id]=\"'canvas-' + i\"></div>\n</div>\n\n\n<!--\n<div class=\"fa-9x loaderHolder\" [class.hidden]=\"!loading\" [class.loaderHolder]=\"loading\">\n  <i class=\"fas fa-cog fa-spin\" style=\"margin:auto\"></i>\n</div>\n -->\n","import { Component, OnInit } from '@angular/core';\n//import { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material\";\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { AuthenticationService } from '../authentication.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  form: FormGroup;\n  //public profileForm: FormGroup;\n\n  profileForm = new FormGroup({\n    username: new FormControl(''),\n    password: new FormControl(''),\n  })\n  constructor(\n    private auth: AuthenticationService,\n    private dialogRef: MatDialogRef<LoginComponent>,\n  ) {}\n\n  ngOnInit(): void {\n\n\n  }\n\n\n\n  save() {\n    this.auth.login(\n      this.profileForm.controls.username.value,\n      this.profileForm.controls.password.value)\n\n    this.dialogRef.close(this.profileForm.value);\n  }\n\n  cancel(){\n    this.dialogRef.close()\n  }\n}\n","<p>login works!</p>\n<h1 mat-dialog-title>Login form</h1>\n<form [formGroup]=\"profileForm\">\n  <mat-form-field class=\"\">\n    <mat-label>User name</mat-label>\n    <input matInput #username maxlength=\"256\" type = \"string\" placeholder=\"password\"  formControlName=\"username\">\n    <mat-hint align=\"start\"><strong>Any name</strong> </mat-hint>\n  </mat-form-field>\n  <mat-form-field class=\"\">\n    <mat-label>Password</mat-label>\n    <input matInput #password1 maxlength=\"256\" type = \"password\" placeholder=\"password\" formControlName=\"password\">\n    <mat-hint align=\"start\"><strong>a strong password</strong> </mat-hint>\n  </mat-form-field>\n\n</form>\n<!-- <button mat-button [mat-dialog-close]=  cdkFocusInitial>Ok</button> -->\n<button mat-button (click)=\"cancel()\">Cancel</button>\n<button mat-button (click)=\"save()\">Login</button>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { AuthenticationService } from './authentication.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PurchaseService {\n\n  constructor(private http: HttpClient, private auth: AuthenticationService) { }\n\n  purchase(amount) {\n    let csrf = this.auth.getCookie('csrftoken')\n    csrf = csrf == null? \"something\":csrf;\n\n    let csrfheader = new HttpHeaders({ 'X-CSRFToken': csrf })\n    console.log(this.auth.getHost() + \"tree/buy/\")\n    this.http.post(this.auth.getHost() + \"tree/buy/\", { \"amount\": amount}, { headers: csrfheader })\n      .subscribe(() => {})\n  }\n\n  reset(){\n    this.http.get(this.auth.getHost() + \"delete\")\n    .subscribe(() => {\n      //nothing to do here\n    })\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { PurchaseService } from '../purchase.service';\n@Component({\n  selector: 'app-purchase',\n  templateUrl: './purchase.component.html',\n  styleUrls: ['./purchase.component.css']\n})\nexport class PurchaseComponent implements OnInit {\n\n  constructor(\n    private dialogRef: MatDialogRef<PurchaseComponent>,\n    public purchase: PurchaseService,\n    ) { }\n\n  ngOnInit(): void {\n  }\n  save(amount) {\n    this.purchase.purchase(amount)\n\n    this.dialogRef.close();\n  }\n\n}\n","  <form class=\"example-form\">\n    <mat-form-field class=\"example-full-width\">\n      <mat-label>Amount</mat-label>\n      <input matInput #message maxlength=\"256\" type=\"number\" placeholder=\"999\">\n      <mat-hint align=\"start\"><strong>Numbers only</strong> </mat-hint>\n      <mat-hint align=\"end\"> max 5000</mat-hint>\n    </mat-form-field>\n  </form>\n  <button (click)=\"save(message.value)\" [disabled]=\"false\" mat-raised-button>Buy</button>\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../authentication.service';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { FormGroup, FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  constructor(\n    private auth: AuthenticationService,\n\n\n    private dialogRef: MatDialogRef<RegisterComponent>,\n  ) { }\n\n  profileForm = new FormGroup({\n    username: new FormControl(''),\n    password: new FormControl(''),\n    password2: new FormControl(''),\n  })\n  save() {\n    this.auth.register(\n      this.profileForm.controls.username.value,\n      this.profileForm.controls.password.value)\n\n    this.dialogRef.close(this.profileForm.value);\n  }\n\n  cancel(){\n    this.dialogRef.close()\n  }\n  ngOnInit(): void {\n  }\n\n}\n","\n<h1 mat-dialog-title>Register form</h1>\n<form [formGroup]=\"profileForm\">\n  <mat-form-field class=\"\">\n    <mat-label>User name</mat-label>\n    <input matInput #username maxlength=\"256\" type = \"string\" placeholder=\"some_name\"  formControlName=\"username\">\n    <mat-hint align=\"start\"><strong>Any name</strong> </mat-hint>\n  </mat-form-field>\n  <mat-form-field class=\"\">\n    <mat-label>Password</mat-label>\n    <input matInput #password1 maxlength=\"256\" type = \"password\" placeholder=\"password\" formControlName=\"password\">\n    <mat-hint align=\"start\"><strong>a strong password</strong> </mat-hint>\n  </mat-form-field>\n\n  <mat-form-field class=\"\">\n    <mat-label>Password</mat-label>\n    <input matInput #password1 maxlength=\"256\" type = \"password\" placeholder=\"password\" formControlName=\"password2\">\n    <mat-hint align=\"start\"><strong>Repeat password</strong> </mat-hint>\n  </mat-form-field>\n\n</form>\n<!-- <button mat-button [mat-dialog-close]=  cdkFocusInitial>Ok</button> -->\n<button mat-button (click)=\"cancel()\">Cancel</button>\n<button mat-button (click)=\"save()\">Register</button>\n","import { Directive, Input, Renderer2, ElementRef, OnInit } from '@angular/core';\n\n@Directive({\n  selector: '[appTreeDirective]'\n})\nexport class TreeDirectiveDirective implements OnInit {\n@Input() treeData:any;\n  constructor(private renderer: Renderer2, private elementRef: ElementRef) { }\nngOnInit(): void{\n  const div = this.renderer.createElement('div');\n  //const text = this.renderer.createText('Hello world!');\nthis.renderer.setAttribute(div, \"innerHtml\",\"<p> hehe </p>\")\n  //this.renderer.appendChild(div, text);\n  this.renderer.appendChild(this.elementRef.nativeElement, div)\n}\n}\n","import { Injectable } from '@angular/core';\r\nimport { User } from './user';\r\nimport { Node } from './node';\r\n declare const d3:any;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TreeGeneratorService {\r\n\r\n  constructor() { }\r\n/*   public generateLegend(users: User[]){\r\n\r\n  } */\r\n  public generateBlobTree(users:string[], data:any[], width, height, scale):any{\r\n    //create blob type\r\n    d3.create\r\n    var height:any = height - 200\r\n    //add the group element that will contain all the drawings of the graph\r\n    //graph = svg.append('g').attr('transform', 'translate(50, 50)');\r\n    users = users.sort((a,b) => a.localeCompare(b))\r\n    console.log(users, \"users \")\r\n    var graph = d3.create('svg:g');\r\n\r\n/*     scale = d3.scaleOrdinal(d3[\"schemeSet3\"])\r\n      .domain(users.map((element) => element.username)) */\r\n\r\n    graph.selectAll('.node').remove();//no needed\r\n    graph.selectAll('.link').remove();\r\n\r\n\r\n    data.sort((a, b) => a.number - b.number)\r\n\r\n/*     let even = data.filter((a)=>a.number%2 == 0).sort((a,b)=>b.number - a .number)\r\n    let odd = data.filter((a)=>a.number%2 == 1).sort((a,b)=>a.number - b .number)\r\n\r\n    data = even.concat(odd) */\r\n\r\n/*\r\n    data.sort((a, b) => a.number % 2 == 0 ?  b.number - a.number:0)\r\n\r\n    data.sort((a, b) => a.number % 2 == 1 ? a.number - b.number:0)\r\n */\r\n\r\n\r\n\r\n    console.log(data, \" data that is not sorted\")\r\n    // this is broken !! sort on the serverside\r\n    // stratify the data\r\n/*     var rootNode = d3.stratify()\r\n      .id(function (d:any) {\r\n        return d.number\r\n      })\r\n      .parentId(function (d:any) {\r\n        return d.parent;\r\n      })\r\n      (data) */\r\n    //stratified data -> tree form data\r\n\r\n    //var treeData = d3.tree().size([width * 0.97, height*0.75])(rootNode)\r\n\r\n    //create the selection of nodes from the tree data descendants\r\n/*\r\n    var nodes = graph.selectAll('.node')\r\n      .data(treeData.descendants())\r\n */\r\nvar nodes = graph.selectAll('.node')\r\n.data(data)\r\n\r\n/*\r\nvar nodes2 = graph.selectAll('.node')\r\n.data(treeData.descendants())\r\n */\r\n\r\n    // save the links data from the stratified data\r\n    // for now no links :)\r\n/*     var links = graph.selectAll('.link').data(rootNode.links())\r\n\r\n    // draw the links as path elements\r\n    links.enter().append('path')\r\n      .attr('stroke', 'blue')\r\n      .attr('d', d3.linkVertical()\r\n        .x(function (d) { return d.data.x * width})\r\n        .y(function (d) { return d.data.y * height }))\r\n      .attr('class', 'link')\r\n      .attr('fill', 'none')\r\n      .attr('stroke', d => d.target.data.hasOwnProperty('userName') ? scale(d.source.data.userName) : 'gray')////#aaa\r\n      .attr('stroke-width', 2) */\r\n\r\n    // add a group for each node with the specified coordinates\r\n    var enterNodes = nodes.enter().append('g')\r\n      .attr('transform', (d, i, n) => {\r\n        //rotates the tree\r\n        let x = d.x *width\r\n        let y = d.y * height\r\n        return `translate(${x},${y})`\r\n      })\r\n      .attr('class', \"node\")\r\n\r\n    // draw rectangles in each node group\r\n    var rectangles = enterNodes.append('rect')\r\n      .attr('fill', d => d.userName != null ? scale(d.userName) : 'gray')\r\n      .attr('stroke', 'black')\r\n      .attr('width',d =>{\r\n        let boxWidth = d.grow_to * width - d.x * width +30\r\n        return boxWidth// >= 30? boxWidth: 30\r\n      } )// d.growto * width - d.x * width //d.spread * width + 30\r\n      .attr('height', 30)\r\n      .attr('transform', d => `translate(${-5}, ${-10})`).raise();\r\n    // add a click event on each rectangle\r\n    enterNodes.on(\"click\", (d) => {\r\n      console.log(d)\r\n    })\r\n    enterNodes.on(\"mouseenter\", (d) => {\r\n\r\n    })\r\n    // add text to each of the node groups\r\n    // add more stuff to this like to and from\r\n    enterNodes.append('text')\r\n      .text((d) => { return d.number })\r\n      .attr('fill', d => d.childrenMissing > 0 ? 'black' : \"red\")\r\n      .attr('transform', d => `translate(${2}, ${10})`);\r\n//already done by the other function\r\n   /*  var colorLegend = d3.legendColor()\r\n      .shape(\"path\", d3.symbol().type(d3.symbolTriangle).size(150)())\r\n      .shapePadding(10)\r\n      //use cellFilter to hide the \"e\" cell\r\n      .cellFilter(function (d) { return d.label !== \"e\" })\r\n      .scale(scale)\r\n\r\n    graph.append(\"g\")\r\n      .attr(\"class\", \"userLegend\")\r\n    graph.select(\".userLegend\").call(colorLegend) */\r\n\r\n    return graph\r\n  }\r\n\r\n\r\n  public generateTree(users:string[], data:Node[], width, height, scale):any{\r\n\r\n    d3.create //wtf does this do?\r\n    var height:any = height - 200\r\n    //add the group element that will contain all the drawings of the graph\r\n    //graph = svg.append('g').attr('transform', 'translate(50, 50)');\r\n    users = users.sort((a,b) => a.localeCompare(b))\r\n    console.log(users, \"users \")\r\n    var graph = d3.create('svg:g');\r\n\r\n/*     scale = d3.scaleOrdinal(d3[\"schemeSet3\"])\r\n      .domain(users) *///.map((element) => element.username))\r\n\r\n    graph.selectAll('.node').remove();\r\n    graph.selectAll('.link').remove();\r\n\r\n\r\n    data.sort((a, b) => a.number - b.number)\r\n\r\n    let even = data.filter((a)=>a.number%2 == 0).sort((a,b)=>b.number - a .number)\r\n    let odd = data.filter((a)=>a.number%2 == 1).sort((a,b)=>a.number - b .number)\r\n\r\n    data = even.concat(odd)\r\n\r\n/*\r\n    data.sort((a, b) => a.number % 2 == 0 ?  b.number - a.number:0)\r\n\r\n    data.sort((a, b) => a.number % 2 == 1 ? a.number - b.number:0)\r\n */\r\n\r\n\r\n\r\n    console.log(data, \" data that is not sorted\")\r\n    // this is broken !! sort on the serverside\r\n    // stratify the data\r\n    var rootNode = d3.stratify()\r\n      .id(function (d:any) {\r\n        return d.number\r\n      })\r\n      .parentId(function (d:any) {\r\n        return d.parent;\r\n      })\r\n      (data)\r\n    //stratified data -> tree form data\r\n\r\n    //var treeData = d3.tree().size([width * 0.97, height*0.75])(rootNode)\r\n\r\n    //create the selection of nodes from the tree data descendants\r\n/*\r\n    var nodes = graph.selectAll('.node')\r\n      .data(treeData.descendants())\r\n */\r\nvar nodes = graph.selectAll('.node')\r\n.data(data)\r\n\r\n/*\r\nvar nodes2 = graph.selectAll('.node')\r\n.data(treeData.descendants())\r\n */\r\n\r\n    // save the links data from the stratified data\r\n    var links = graph.selectAll('.link').data(rootNode.links())\r\n\r\n    // draw the links as path elements\r\n    links.enter().append('path')\r\n      .attr('stroke', 'blue')\r\n      .attr('d', d3.linkVertical()\r\n        .x(function (d) { return d.data.x * width})\r\n        .y(function (d) { return d.data.y * height }))\r\n      .attr('class', 'link')\r\n      .attr('fill', 'none')\r\n      .attr('stroke', d => d.target.data.hasOwnProperty('userName') ? scale(d.source.data.userName) : 'gray')////#aaa\r\n      .attr('stroke-width', 2)\r\n\r\n    // add a group for each node with the specified coordinates\r\n    var enterNodes = nodes.enter().append('g')\r\n      .attr('transform', (d, i, n) => {\r\n        //rotates the tree\r\n        let x = d.x *width\r\n        let y = d.y * height\r\n        return `translate(${x},${y})`\r\n      })\r\n      .attr('class', \"node\")\r\n\r\n    // draw rectangles in each node group\r\n    var rectangles = enterNodes.append('rect')\r\n      .attr('fill', d => d.userName != null ? scale(d.userName) : 'gray')\r\n      .attr('stroke', 'black')\r\n      .attr('width', 30)//d.spread * width + 30\r\n      .attr('height', 30)\r\n      .attr('transform', d => `translate(${-5}, ${-10})`).raise();\r\n    // add a click event on each rectangle\r\n    enterNodes.on(\"click\", (d) => {\r\n      console.log(d)\r\n    })\r\n    enterNodes.on(\"mouseenter\", (d) => {\r\n\r\n    })\r\n    // add text to each of the node groups\r\n    enterNodes.append('text')\r\n      .text((d) => { return d.number })\r\n      .attr('fill', d => d.childrenMissing > 0 ? 'black' : \"red\")\r\n      .attr('transform', d => `translate(${2}, ${10})`);\r\n\r\n      var colorLegend = d3.legendColor()\r\n      .shape(\"path\", d3.symbol().type(d3.symbolTriangle).size(150)())\r\n      .shapePadding(40)\r\n      //use cellFilter to hide the \"e\" cell\r\n      .cellFilter(function (d) { return d.label !== \"e\" })\r\n      .scale(scale)\r\n      graph.append(\"g\")\r\n      .attr(\"class\", \"userLegend\")\r\n      graph.select(\".userLegend\").call(colorLegend)\r\n\r\n    return graph\r\n  }\r\n}\r\n","import { Component, OnInit, AfterViewInit, AfterContentInit, Input } from '@angular/core';\r\nimport { AuthenticationService } from '../authentication.service';\r\nimport { User } from '../user';\r\nimport { Node } from '../node';\r\nimport { TreeGeneratorService } from '../tree-generator.service';\r\ndeclare const ReconnectingWebSocket: any;\r\ndeclare const d3: any;\r\n\r\n\r\n@Component({\r\n  selector: 'app-tree',\r\n  templateUrl: './tree.component.html',\r\n  styleUrls: ['./tree.component.css']\r\n})\r\nexport class TreeComponent implements OnInit, AfterViewInit {\r\n\r\n  constructor(\r\n    public auth: AuthenticationService,\r\n    public tree_service: TreeGeneratorService) { }\r\n  //public data: any[]\r\n  public users: User[]\r\n  update: void;\r\n  name: string;\r\n  @Input() data: Node[];\r\n  @Input() index:number;\r\n\r\n  ngOnInit(): void {\r\n    console.log(this.data, \" its the mofoking data\")\r\n    this.auth.userList.subscribe(dataResponse => {\r\n\r\n      this.users = dataResponse\r\n\r\n\r\n      console.log(this.users, \"this is the users data form subscription\")\r\n    })\r\n    this.name = this.data.length.toString()\r\n\r\n  }\r\n  ngAfterViewInit(): void {\r\n\r\n    /* setTimeout(() => {\r\n      var dims = { height: 1400, width: 800 };\r\n      var svg = d3.selectAll(\".canvas\")\r\n        .append('svg')\r\n        .attr('width', dims.width + 100)\r\n        .attr('height', dims.height + 100);\r\n      var graph = this.tree_service.generateTree(this.users,this.data);\r\n      console.log(graph.node(), \" nodes\")\r\n      svg.append(()=>graph.node())\r\n      svg.append(()=>graph.node())\r\n    }, 0); */\r\n\r\n  }\r\n\r\n}\r\n//setTimeout(() => {\r\n/*   var graph\r\n    var svg\r\n    const dims = { height: 1400, width: 800 };\r\n    svg = d3.selectAll(\".canvas\")\r\n      .append('svg')\r\n      .attr('width', dims.width + 100)\r\n      .attr('height', dims.height + 100);\r\n    //add the group element that will contain all the drawings of the graph\r\n\r\n    //graph = svg.append('g').attr('transform', 'translate(50, 50)');\r\n    var graph = d3.create('svg:g');\r\n    var scale;\r\n    scale = d3.scaleOrdinal(d3[\"schemeSet3\"])\r\n      .domain(this.users.map((element) => element.username))\r\n\r\n    graph.selectAll('.node').remove();\r\n    graph.selectAll('.link').remove();\r\n    this.data.sort((a, b) => a.number - b.number)\r\n    this.data.sort((a, b) => a.number % 2 == 1 ? a.number - b.number : b.number - a.number)\r\n    console.log(this.data, \"data before stratify\")\r\n    // stratify the data\r\n    var rootNode = d3.stratify()\r\n      .id(function (d) {\r\n        return d.number\r\n      })\r\n      .parentId(function (d) {\r\n        return d.parent;\r\n      })\r\n      (this.data)\r\n    //stratified data -> tree form data\r\n    var treeData = d3.tree().size([1400, 800])(rootNode)\r\n    //create the selection of nodes from the tree data descendants\r\n    var nodes = graph.selectAll('.node')\r\n      .data(treeData.descendants())\r\n\r\n    // save the links data from the stratified data\r\n    var links = graph.selectAll('.link').data(rootNode.links())\r\n\r\n    // draw the links as path elements\r\n    links.enter().append('path')\r\n      .attr('stroke', 'blue')\r\n      .attr('d', d3.linkHorizontal()\r\n        .x(function (d) { return d.y; })\r\n        .y(function (d) { return d.x; }))\r\n      .attr('class', 'link')\r\n      .attr('fill', 'none')\r\n      .attr('stroke', d => d.target.data.hasOwnProperty('userName') ? scale(d.source.data.userName) : 'gray')////#aaa\r\n      .attr('stroke-width', 2)\r\n\r\n    // add a group for each node with the specified coordinates\r\n    var enterNodes = nodes.enter().append('g')\r\n      .attr('transform', (d, i, n) => {\r\n        //rotates the tree\r\n        let x = d.y\r\n        let y = d.x\r\n        return `translate(${x},${y})`\r\n      })\r\n      .attr('class', \"node\")\r\n\r\n    // draw rectangles in each node group\r\n    var rectangles = enterNodes.append('rect')\r\n      .attr('fill', d => d.data.userName != null ? scale(d.data.userName) : 'gray')\r\n      .attr('stroke', 'black')\r\n      .attr('width', 30)//30\r\n      .attr('height', 30)\r\n      .attr('transform', d => `translate(${-5}, ${-10})`).raise();\r\n    // add a click event on each rectangle\r\n    enterNodes.on(\"click\", (d) => {\r\n      console.log(d)\r\n    })\r\n    enterNodes.on(\"mouseenter\", (d) => {\r\n      console.log(d)\r\n    })\r\n    // add text to each of the node groups\r\n    enterNodes.append('text')\r\n      .text((d) => { return d.data.number })\r\n      .attr('fill', d => d.data.childrenMissing > 0 ? 'black' : \"red\")\r\n      .attr('transform', d => `translate(${2}, ${10})`);\r\n\r\n    var colorLegend = d3.legendColor()\r\n      .shape(\"path\", d3.symbol().type(d3.symbolTriangle).size(150)())\r\n      .shapePadding(10)\r\n      //use cellFilter to hide the \"e\" cell\r\n      .cellFilter(function (d) { return d.label !== \"e\" })\r\n      .scale(scale)\r\n\r\n    graph.append(\"g\")\r\n      .attr(\"class\", \"userLegend\")\r\n    graph.select(\".userLegend\").call(colorLegend) */\r\n\r\n//svg.append(()=>graph.node())\r\n//},0);\r\n\r\n  //}\r\n\r\n\r\n","\n<div class=\"container\" style=\"float:left; width: auto; height: auto\">\n\n  <div class =\"canvas\" style=\"border: solid black;\">\n\n  </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}
>>>>>>> blobs
